/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Mime;
using xi.sdk.resellers.csharp.Client;
using xi.sdk.resellers.csharp.Model;

namespace xi.sdk.resellers.csharp.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQuotesV5ApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get Quote Details
        /// </summary>
        /// <remarks>
        /// The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <returns>QuoteDetails</returns>
        QuoteDetails GetV5QuotesDetails(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?));

        /// <summary>
        /// Get Quote Details
        /// </summary>
        /// <remarks>
        /// The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <returns>ApiResponse of QuoteDetails</returns>
        ApiResponse<QuoteDetails> GetV5QuotesDetailsWithHttpInfo(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?));
        /// <summary>
        /// Search Quotes
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <returns>QuoteListResponse</returns>
        QuoteListResponse PostV5QuotesSearch(QuoteListRequest? quoteListRequest = default(QuoteListRequest?));

        /// <summary>
        /// Search Quotes
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <returns>ApiResponse of QuoteListResponse</returns>
        ApiResponse<QuoteListResponse> PostV5QuotesSearchWithHttpInfo(QuoteListRequest? quoteListRequest = default(QuoteListRequest?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQuotesV5ApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get Quote Details
        /// </summary>
        /// <remarks>
        /// The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of QuoteDetails</returns>
        System.Threading.Tasks.Task<QuoteDetails> GetV5QuotesDetailsAsync(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get Quote Details
        /// </summary>
        /// <remarks>
        /// The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (QuoteDetails)</returns>
        System.Threading.Tasks.Task<ApiResponse<QuoteDetails>> GetV5QuotesDetailsWithHttpInfoAsync(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Search Quotes
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of QuoteListResponse</returns>
        System.Threading.Tasks.Task<QuoteListResponse> PostV5QuotesSearchAsync(QuoteListRequest? quoteListRequest = default(QuoteListRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Search Quotes
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (QuoteListResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<QuoteListResponse>> PostV5QuotesSearchWithHttpInfoAsync(QuoteListRequest? quoteListRequest = default(QuoteListRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IQuotesV5Api : IQuotesV5ApiSync, IQuotesV5ApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class QuotesV5Api : IDisposable, IQuotesV5Api
    {
        private xi.sdk.resellers.csharp.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <returns></returns>
        public QuotesV5Api() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        public QuotesV5Api(string basePath)
        {
            this.Configuration = xi.sdk.resellers.csharp.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.csharp.Client.GlobalConfiguration.Instance,
                new xi.sdk.resellers.csharp.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new xi.sdk.resellers.csharp.Client.ApiClient(this.Configuration.BasePath);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = xi.sdk.resellers.csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class using Configuration object.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public QuotesV5Api(xi.sdk.resellers.csharp.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = xi.sdk.resellers.csharp.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.csharp.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new xi.sdk.resellers.csharp.Client.ApiClient(this.Configuration.BasePath);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = xi.sdk.resellers.csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public QuotesV5Api(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public QuotesV5Api(HttpClient client, string basePath, HttpClientHandler handler = null)
        {
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = xi.sdk.resellers.csharp.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.csharp.Client.GlobalConfiguration.Instance,
                new xi.sdk.resellers.csharp.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new xi.sdk.resellers.csharp.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = xi.sdk.resellers.csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class using Configuration object.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public QuotesV5Api(HttpClient client, xi.sdk.resellers.csharp.Client.Configuration configuration, HttpClientHandler handler = null)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = xi.sdk.resellers.csharp.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.csharp.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new xi.sdk.resellers.csharp.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = xi.sdk.resellers.csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuotesV5Api"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        /// <exception cref="ArgumentNullException"></exception>
        public QuotesV5Api(xi.sdk.resellers.csharp.Client.ISynchronousClient client, xi.sdk.resellers.csharp.Client.IAsynchronousClient asyncClient, xi.sdk.resellers.csharp.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = xi.sdk.resellers.csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Disposes resources if they were created by us
        /// </summary>
        public void Dispose()
        {
            this.ApiClient?.Dispose();
        }

        /// <summary>
        /// Holds the ApiClient if created
        /// </summary>
        public xi.sdk.resellers.csharp.Client.ApiClient ApiClient { get; set; } = null;

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public xi.sdk.resellers.csharp.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public xi.sdk.resellers.csharp.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public xi.sdk.resellers.csharp.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public xi.sdk.resellers.csharp.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get Quote Details The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <returns>QuoteDetails</returns>
        public QuoteDetails GetV5QuotesDetails(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?))
        {
            xi.sdk.resellers.csharp.Client.ApiResponse<QuoteDetails> localVarResponse = GetV5QuotesDetailsWithHttpInfo(quoteNumber, customerNumber, isoCountryCode, thirdPartySource);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Quote Details The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <returns>ApiResponse of QuoteDetails</returns>
        public xi.sdk.resellers.csharp.Client.ApiResponse<QuoteDetails> GetV5QuotesDetailsWithHttpInfo(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?))
        {
            // verify the required parameter 'quoteNumber' is set
            if (quoteNumber == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'quoteNumber' when calling QuotesV5Api->GetV5QuotesDetails");

            // verify the required parameter 'customerNumber' is set
            if (customerNumber == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'customerNumber' when calling QuotesV5Api->GetV5QuotesDetails");

            // verify the required parameter 'isoCountryCode' is set
            if (isoCountryCode == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'isoCountryCode' when calling QuotesV5Api->GetV5QuotesDetails");

            xi.sdk.resellers.csharp.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("quoteNumber", xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToString(quoteNumber)); // path parameter
            localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "customerNumber", customerNumber));
            localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "isoCountryCode", isoCountryCode));
            if (thirdPartySource != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "thirdPartySource", thirdPartySource));
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<QuoteDetails>("/resellers/v5/quote/{quoteNumber}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetV5QuotesDetails", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get Quote Details The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of QuoteDetails</returns>
        public async System.Threading.Tasks.Task<QuoteDetails> GetV5QuotesDetailsAsync(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi.sdk.resellers.csharp.Client.ApiResponse<QuoteDetails> localVarResponse = await GetV5QuotesDetailsWithHttpInfoAsync(quoteNumber, customerNumber, isoCountryCode, thirdPartySource, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get Quote Details The quote details API provides all quote details associated with the quote number provided.   The “&lt;strong&gt;quoteNumber&lt;/strong&gt;”, “&lt;strong&gt;isoCountryCode&lt;/strong&gt;” and “&lt;strong&gt;customerNumber&lt;/strong&gt;” parameters are required.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteNumber">Ingram Micro Quote Number</param>
        /// <param name="customerNumber">Your Ingram Micro unique customer number</param>
        /// <param name="isoCountryCode"></param>
        /// <param name="thirdPartySource">Unique identifier used to identify the third party source accessing the services (optional, default to &quot;customer&quot;)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (QuoteDetails)</returns>
        public async System.Threading.Tasks.Task<xi.sdk.resellers.csharp.Client.ApiResponse<QuoteDetails>> GetV5QuotesDetailsWithHttpInfoAsync(string quoteNumber, string customerNumber, string isoCountryCode, string? thirdPartySource = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'quoteNumber' is set
            if (quoteNumber == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'quoteNumber' when calling QuotesV5Api->GetV5QuotesDetails");

            // verify the required parameter 'customerNumber' is set
            if (customerNumber == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'customerNumber' when calling QuotesV5Api->GetV5QuotesDetails");

            // verify the required parameter 'isoCountryCode' is set
            if (isoCountryCode == null)
                throw new xi.sdk.resellers.csharp.Client.ApiException(400, "Missing required parameter 'isoCountryCode' when calling QuotesV5Api->GetV5QuotesDetails");


            xi.sdk.resellers.csharp.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("quoteNumber", xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToString(quoteNumber)); // path parameter
            localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "customerNumber", customerNumber));
            localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "isoCountryCode", isoCountryCode));
            if (thirdPartySource != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.csharp.Client.ClientUtils.ParameterToMultiMap("", "thirdPartySource", thirdPartySource));
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<QuoteDetails>("/resellers/v5/quote/{quoteNumber}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetV5QuotesDetails", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search Quotes This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <returns>QuoteListResponse</returns>
        public QuoteListResponse PostV5QuotesSearch(QuoteListRequest? quoteListRequest = default(QuoteListRequest?))
        {
            xi.sdk.resellers.csharp.Client.ApiResponse<QuoteListResponse> localVarResponse = PostV5QuotesSearchWithHttpInfo(quoteListRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search Quotes This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <returns>ApiResponse of QuoteListResponse</returns>
        public xi.sdk.resellers.csharp.Client.ApiResponse<QuoteListResponse> PostV5QuotesSearchWithHttpInfo(QuoteListRequest? quoteListRequest = default(QuoteListRequest?))
        {
            xi.sdk.resellers.csharp.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = quoteListRequest;

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<QuoteListResponse>("/resellers/v5/quote/search", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostV5QuotesSearch", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search Quotes This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of QuoteListResponse</returns>
        public async System.Threading.Tasks.Task<QuoteListResponse> PostV5QuotesSearchAsync(QuoteListRequest? quoteListRequest = default(QuoteListRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi.sdk.resellers.csharp.Client.ApiResponse<QuoteListResponse> localVarResponse = await PostV5QuotesSearchWithHttpInfoAsync(quoteListRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search Quotes This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:&lt;ul&gt;&lt;li&gt;Only active quotes are available through this API.&lt;/li&gt;&lt;li&gt;Quotes older than 365 days are excluded by default.&lt;/li&gt;&lt;li&gt;You can use date range filters to retrieve quotes older than 30 days and up to 365 days.&lt;/li&gt;&lt;li&gt;Quotes that are in draft and closed states are excluded, and are not accessible through this API.&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi.sdk.resellers.csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="quoteListRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (QuoteListResponse)</returns>
        public async System.Threading.Tasks.Task<xi.sdk.resellers.csharp.Client.ApiResponse<QuoteListResponse>> PostV5QuotesSearchWithHttpInfoAsync(QuoteListRequest? quoteListRequest = default(QuoteListRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            xi.sdk.resellers.csharp.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.Data = quoteListRequest;

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<QuoteListResponse>("/resellers/v5/quote/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostV5QuotesSearch", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
