/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.csharp.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.csharp.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.csharp.Model
{
    /// <summary>
    /// HATEOAS links for the main order
    /// </summary>
    [DataContract(Name = "orderSearchResponse_serviceResponse_ordersearchresponse_orders_inner_links")]
    public partial class OrderSearchResponseServiceResponseOrdersearchresponseOrdersInnerLinks : IValidatableObject
    {
        /// <summary>
        /// Topic being orders in this case, if it is orders then the link will provide details of the order.
        /// </summary>
        /// <value>Topic being orders in this case, if it is orders then the link will provide details of the order.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TopicEnum
        {
            /// <summary>
            /// Enum Orders for value: orders
            /// </summary>
            [EnumMember(Value = "orders")]
            Orders = 1,

            /// <summary>
            /// Enum Invoices for value: invoices
            /// </summary>
            [EnumMember(Value = "invoices")]
            Invoices = 2
        }


        /// <summary>
        /// Topic being orders in this case, if it is orders then the link will provide details of the order.
        /// </summary>
        /// <value>Topic being orders in this case, if it is orders then the link will provide details of the order.</value>
        [DataMember(Name = "topic", EmitDefaultValue = false)]
        public TopicEnum? Topic { get; set; }
        /// <summary>
        /// The type of call that can be made to the href link
        /// </summary>
        /// <value>The type of call that can be made to the href link</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum GET for value: GET
            /// </summary>
            [EnumMember(Value = "GET")]
            GET = 1,

            /// <summary>
            /// Enum POST for value: POST
            /// </summary>
            [EnumMember(Value = "POST")]
            POST = 2,

            /// <summary>
            /// Enum PUT for value: PUT
            /// </summary>
            [EnumMember(Value = "PUT")]
            PUT = 3
        }


        /// <summary>
        /// The type of call that can be made to the href link
        /// </summary>
        /// <value>The type of call that can be made to the href link</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public TypeEnum? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSearchResponseServiceResponseOrdersearchresponseOrdersInnerLinks" /> class.
        /// </summary>
        /// <param name="topic">Topic being orders in this case, if it is orders then the link will provide details of the order..</param>
        /// <param name="href">The API endpoint for accessing the relevant data.</param>
        /// <param name="type">The type of call that can be made to the href link.</param>
        public OrderSearchResponseServiceResponseOrdersearchresponseOrdersInnerLinks(TopicEnum? topic = default(TopicEnum?), string href = default(string), TypeEnum? type = default(TypeEnum?))
        {
            this.Topic = topic;
            this.Href = href;
            this.Type = type;
        }

        /// <summary>
        /// The API endpoint for accessing the relevant data
        /// </summary>
        /// <value>The API endpoint for accessing the relevant data</value>
        [DataMember(Name = "href", EmitDefaultValue = false)]
        public string Href { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderSearchResponseServiceResponseOrdersearchresponseOrdersInnerLinks {\n");
            sb.Append("  Topic: ").Append(Topic).Append("\n");
            sb.Append("  Href: ").Append(Href).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
