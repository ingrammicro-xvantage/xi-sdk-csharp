/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.csharp.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.csharp.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.csharp.Model
{
    /// <summary>
    /// OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner
    /// </summary>
    [DataContract(Name = "orderDetailResponse_serviceresponse_orderdetailresponse_miscfeeline_inner")]
    public partial class OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner" /> class.
        /// </summary>
        /// <param name="description">Handling charges/Miscellaneous Fee description.</param>
        /// <param name="chargeamount">Handling charges/ Miscelaneous fee amount.</param>
        public OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner(string description = default(string), string chargeamount = default(string))
        {
            this.Description = description;
            this.Chargeamount = chargeamount;
        }

        /// <summary>
        /// Handling charges/Miscellaneous Fee description
        /// </summary>
        /// <value>Handling charges/Miscellaneous Fee description</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Handling charges/ Miscelaneous fee amount
        /// </summary>
        /// <value>Handling charges/ Miscelaneous fee amount</value>
        [DataMember(Name = "chargeamount", EmitDefaultValue = false)]
        public string Chargeamount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Chargeamount: ").Append(Chargeamount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
