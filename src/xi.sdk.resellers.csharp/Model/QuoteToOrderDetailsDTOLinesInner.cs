/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.csharp.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.csharp.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.csharp.Model
{
    /// <summary>
    /// QuoteToOrderDetailsDTOLinesInner
    /// </summary>
    [DataContract(Name = "QuoteToOrderDetailsDTO_lines_inner")]
    public partial class QuoteToOrderDetailsDTOLinesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuoteToOrderDetailsDTOLinesInner" /> class.
        /// </summary>
        /// <param name="customerLineNumber">The reseller&#39;s line item number for reference in their system..</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number..</param>
        /// <param name="quantity">The quantity of the line item..</param>
        /// <param name="vmfAdditionalAttributesLines">The object containing the list of fields required at a line level by the vendor..</param>
        public QuoteToOrderDetailsDTOLinesInner(string customerLineNumber = default(string), string ingramPartNumber = default(string), string quantity = default(string), List<ValidateQuoteResponseLinesInnerVmfAdditionalAttributesLinesInner> vmfAdditionalAttributesLines = default(List<ValidateQuoteResponseLinesInnerVmfAdditionalAttributesLinesInner>))
        {
            this.CustomerLineNumber = customerLineNumber;
            this.IngramPartNumber = ingramPartNumber;
            this.Quantity = quantity;
            this.VmfAdditionalAttributesLines = vmfAdditionalAttributesLines;
        }

        /// <summary>
        /// The reseller&#39;s line item number for reference in their system.
        /// </summary>
        /// <value>The reseller&#39;s line item number for reference in their system.</value>
        [DataMember(Name = "customerLineNumber", EmitDefaultValue = false)]
        public string CustomerLineNumber { get; set; }

        /// <summary>
        /// Unique IngramMicro part number.
        /// </summary>
        /// <value>Unique IngramMicro part number.</value>
        [DataMember(Name = "ingramPartNumber", EmitDefaultValue = false)]
        public string IngramPartNumber { get; set; }

        /// <summary>
        /// The quantity of the line item.
        /// </summary>
        /// <value>The quantity of the line item.</value>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public string Quantity { get; set; }

        /// <summary>
        /// The object containing the list of fields required at a line level by the vendor.
        /// </summary>
        /// <value>The object containing the list of fields required at a line level by the vendor.</value>
        [DataMember(Name = "vmfAdditionalAttributesLines", EmitDefaultValue = false)]
        public List<ValidateQuoteResponseLinesInnerVmfAdditionalAttributesLinesInner> VmfAdditionalAttributesLines { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QuoteToOrderDetailsDTOLinesInner {\n");
            sb.Append("  CustomerLineNumber: ").Append(CustomerLineNumber).Append("\n");
            sb.Append("  IngramPartNumber: ").Append(IngramPartNumber).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  VmfAdditionalAttributesLines: ").Append(VmfAdditionalAttributesLines).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
