/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.csharp.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.csharp.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.csharp.Model
{
    /// <summary>
    /// OrderDetailResponseServiceresponseOrderdetailresponseLinesInner
    /// </summary>
    [DataContract(Name = "orderDetailResponse_serviceresponse_orderdetailresponse_lines_inner")]
    public partial class OrderDetailResponseServiceresponseOrderdetailresponseLinesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailResponseServiceresponseOrderdetailresponseLinesInner" /> class.
        /// </summary>
        /// <param name="linenumber">Impulse line number.</param>
        /// <param name="globallinenumber">Line of the Globel Sku / Customer Line Number.</param>
        /// <param name="ordersuffix">Order Suffix.</param>
        /// <param name="erpordernumber">Sales order number.</param>
        /// <param name="linestatus">Status of the line.</param>
        /// <param name="partnumber">Ingram part number.</param>
        /// <param name="manufacturerpartnumber">manufacture number of the product.</param>
        /// <param name="vendorname">name of the vendor.</param>
        /// <param name="vendorcode">Ingram Micro assigned code for the vendor.</param>
        /// <param name="partdescription1">partdescription1.</param>
        /// <param name="partdescription2">partdescription2.</param>
        /// <param name="unitweight">weight of the product unit.</param>
        /// <param name="unitprice">Customer price of the unit.</param>
        /// <param name="extendedprice">extended price of the order.</param>
        /// <param name="taxamount">tax amount for the order.</param>
        /// <param name="requestedquantity">no. of units requested.</param>
        /// <param name="confirmedquantity">no. of units confirmed available.</param>
        /// <param name="backorderquantity">quantity of back order.</param>
        /// <param name="serialnumberdetails">serialnumberdetails.</param>
        /// <param name="trackingnumber">trackingnumber.</param>
        /// <param name="shipmentdetails">shipmentdetails.</param>
        /// <param name="productextendedspecs">productextendedspecs.</param>
        /// <param name="backorderetadate">estimated date of back order.</param>
        public OrderDetailResponseServiceresponseOrderdetailresponseLinesInner(string linenumber = default(string), string globallinenumber = default(string), string ordersuffix = default(string), string erpordernumber = default(string), string linestatus = default(string), string partnumber = default(string), string manufacturerpartnumber = default(string), string vendorname = default(string), string vendorcode = default(string), string partdescription1 = default(string), string partdescription2 = default(string), string unitweight = default(string), decimal unitprice = default(decimal), decimal extendedprice = default(decimal), decimal taxamount = default(decimal), string requestedquantity = default(string), string confirmedquantity = default(string), string backorderquantity = default(string), List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerSerialnumberdetailsInner> serialnumberdetails = default(List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerSerialnumberdetailsInner>), List<string> trackingnumber = default(List<string>), List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner> shipmentdetails = default(List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner>), List<InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner> productextendedspecs = default(List<InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner>), string backorderetadate = default(string))
        {
            this.Linenumber = linenumber;
            this.Globallinenumber = globallinenumber;
            this.Ordersuffix = ordersuffix;
            this.Erpordernumber = erpordernumber;
            this.Linestatus = linestatus;
            this.Partnumber = partnumber;
            this.Manufacturerpartnumber = manufacturerpartnumber;
            this.Vendorname = vendorname;
            this.Vendorcode = vendorcode;
            this.Partdescription1 = partdescription1;
            this.Partdescription2 = partdescription2;
            this.Unitweight = unitweight;
            this.Unitprice = unitprice;
            this.Extendedprice = extendedprice;
            this.Taxamount = taxamount;
            this.Requestedquantity = requestedquantity;
            this.Confirmedquantity = confirmedquantity;
            this.Backorderquantity = backorderquantity;
            this.Serialnumberdetails = serialnumberdetails;
            this.Trackingnumber = trackingnumber;
            this.Shipmentdetails = shipmentdetails;
            this.Productextendedspecs = productextendedspecs;
            this.Backorderetadate = backorderetadate;
        }

        /// <summary>
        /// Impulse line number
        /// </summary>
        /// <value>Impulse line number</value>
        [DataMember(Name = "linenumber", EmitDefaultValue = false)]
        public string Linenumber { get; set; }

        /// <summary>
        /// Line of the Globel Sku / Customer Line Number
        /// </summary>
        /// <value>Line of the Globel Sku / Customer Line Number</value>
        [DataMember(Name = "globallinenumber", EmitDefaultValue = false)]
        public string Globallinenumber { get; set; }

        /// <summary>
        /// Order Suffix
        /// </summary>
        /// <value>Order Suffix</value>
        [DataMember(Name = "ordersuffix", EmitDefaultValue = false)]
        public string Ordersuffix { get; set; }

        /// <summary>
        /// Sales order number
        /// </summary>
        /// <value>Sales order number</value>
        [DataMember(Name = "erpordernumber", EmitDefaultValue = false)]
        public string Erpordernumber { get; set; }

        /// <summary>
        /// Status of the line
        /// </summary>
        /// <value>Status of the line</value>
        [DataMember(Name = "linestatus", EmitDefaultValue = false)]
        public string Linestatus { get; set; }

        /// <summary>
        /// Ingram part number
        /// </summary>
        /// <value>Ingram part number</value>
        [DataMember(Name = "partnumber", EmitDefaultValue = false)]
        public string Partnumber { get; set; }

        /// <summary>
        /// manufacture number of the product
        /// </summary>
        /// <value>manufacture number of the product</value>
        [DataMember(Name = "manufacturerpartnumber", EmitDefaultValue = false)]
        public string Manufacturerpartnumber { get; set; }

        /// <summary>
        /// name of the vendor
        /// </summary>
        /// <value>name of the vendor</value>
        [DataMember(Name = "vendorname", EmitDefaultValue = false)]
        public string Vendorname { get; set; }

        /// <summary>
        /// Ingram Micro assigned code for the vendor
        /// </summary>
        /// <value>Ingram Micro assigned code for the vendor</value>
        [DataMember(Name = "vendorcode", EmitDefaultValue = false)]
        public string Vendorcode { get; set; }

        /// <summary>
        /// Gets or Sets Partdescription1
        /// </summary>
        [DataMember(Name = "partdescription1", EmitDefaultValue = false)]
        public string Partdescription1 { get; set; }

        /// <summary>
        /// Gets or Sets Partdescription2
        /// </summary>
        [DataMember(Name = "partdescription2", EmitDefaultValue = false)]
        public string Partdescription2 { get; set; }

        /// <summary>
        /// weight of the product unit
        /// </summary>
        /// <value>weight of the product unit</value>
        [DataMember(Name = "unitweight", EmitDefaultValue = false)]
        public string Unitweight { get; set; }

        /// <summary>
        /// Customer price of the unit
        /// </summary>
        /// <value>Customer price of the unit</value>
        [DataMember(Name = "unitprice", EmitDefaultValue = false)]
        public decimal Unitprice { get; set; }

        /// <summary>
        /// extended price of the order
        /// </summary>
        /// <value>extended price of the order</value>
        [DataMember(Name = "extendedprice", EmitDefaultValue = false)]
        public decimal Extendedprice { get; set; }

        /// <summary>
        /// tax amount for the order
        /// </summary>
        /// <value>tax amount for the order</value>
        [DataMember(Name = "taxamount", EmitDefaultValue = false)]
        public decimal Taxamount { get; set; }

        /// <summary>
        /// no. of units requested
        /// </summary>
        /// <value>no. of units requested</value>
        [DataMember(Name = "requestedquantity", EmitDefaultValue = false)]
        public string Requestedquantity { get; set; }

        /// <summary>
        /// no. of units confirmed available
        /// </summary>
        /// <value>no. of units confirmed available</value>
        [DataMember(Name = "confirmedquantity", EmitDefaultValue = false)]
        public string Confirmedquantity { get; set; }

        /// <summary>
        /// quantity of back order
        /// </summary>
        /// <value>quantity of back order</value>
        [DataMember(Name = "backorderquantity", EmitDefaultValue = false)]
        public string Backorderquantity { get; set; }

        /// <summary>
        /// Gets or Sets Serialnumberdetails
        /// </summary>
        [DataMember(Name = "serialnumberdetails", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerSerialnumberdetailsInner> Serialnumberdetails { get; set; }

        /// <summary>
        /// Gets or Sets Trackingnumber
        /// </summary>
        [DataMember(Name = "trackingnumber", EmitDefaultValue = false)]
        public List<string> Trackingnumber { get; set; }

        /// <summary>
        /// Gets or Sets Shipmentdetails
        /// </summary>
        [DataMember(Name = "shipmentdetails", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner> Shipmentdetails { get; set; }

        /// <summary>
        /// Gets or Sets Productextendedspecs
        /// </summary>
        [DataMember(Name = "productextendedspecs", EmitDefaultValue = false)]
        public List<InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner> Productextendedspecs { get; set; }

        /// <summary>
        /// estimated date of back order
        /// </summary>
        /// <value>estimated date of back order</value>
        [DataMember(Name = "backorderetadate", EmitDefaultValue = false)]
        public string Backorderetadate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailResponseServiceresponseOrderdetailresponseLinesInner {\n");
            sb.Append("  Linenumber: ").Append(Linenumber).Append("\n");
            sb.Append("  Globallinenumber: ").Append(Globallinenumber).Append("\n");
            sb.Append("  Ordersuffix: ").Append(Ordersuffix).Append("\n");
            sb.Append("  Erpordernumber: ").Append(Erpordernumber).Append("\n");
            sb.Append("  Linestatus: ").Append(Linestatus).Append("\n");
            sb.Append("  Partnumber: ").Append(Partnumber).Append("\n");
            sb.Append("  Manufacturerpartnumber: ").Append(Manufacturerpartnumber).Append("\n");
            sb.Append("  Vendorname: ").Append(Vendorname).Append("\n");
            sb.Append("  Vendorcode: ").Append(Vendorcode).Append("\n");
            sb.Append("  Partdescription1: ").Append(Partdescription1).Append("\n");
            sb.Append("  Partdescription2: ").Append(Partdescription2).Append("\n");
            sb.Append("  Unitweight: ").Append(Unitweight).Append("\n");
            sb.Append("  Unitprice: ").Append(Unitprice).Append("\n");
            sb.Append("  Extendedprice: ").Append(Extendedprice).Append("\n");
            sb.Append("  Taxamount: ").Append(Taxamount).Append("\n");
            sb.Append("  Requestedquantity: ").Append(Requestedquantity).Append("\n");
            sb.Append("  Confirmedquantity: ").Append(Confirmedquantity).Append("\n");
            sb.Append("  Backorderquantity: ").Append(Backorderquantity).Append("\n");
            sb.Append("  Serialnumberdetails: ").Append(Serialnumberdetails).Append("\n");
            sb.Append("  Trackingnumber: ").Append(Trackingnumber).Append("\n");
            sb.Append("  Shipmentdetails: ").Append(Shipmentdetails).Append("\n");
            sb.Append("  Productextendedspecs: ").Append(Productextendedspecs).Append("\n");
            sb.Append("  Backorderetadate: ").Append(Backorderetadate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
