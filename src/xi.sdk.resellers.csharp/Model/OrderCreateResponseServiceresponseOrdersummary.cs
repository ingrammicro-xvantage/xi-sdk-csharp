/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.csharp.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.csharp.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.csharp.Model
{
    /// <summary>
    /// OrderCreateResponseServiceresponseOrdersummary
    /// </summary>
    [DataContract(Name = "orderCreateResponse_serviceresponse_ordersummary")]
    public partial class OrderCreateResponseServiceresponseOrdersummary : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateResponseServiceresponseOrdersummary" /> class.
        /// </summary>
        /// <param name="customerponumber">customerponumber.</param>
        /// <param name="totalorderamount">Total of all the orders including taxes and fees.</param>
        /// <param name="totalordercreated">Number of orders created, in some cases we may create more than one order..</param>
        /// <param name="shiptoaddress">shiptoaddress.</param>
        public OrderCreateResponseServiceresponseOrdersummary(string customerponumber = default(string), string totalorderamount = default(string), string totalordercreated = default(string), OrderCreateResponseServiceresponseOrdersummaryShiptoaddress shiptoaddress = default(OrderCreateResponseServiceresponseOrdersummaryShiptoaddress))
        {
            this.Customerponumber = customerponumber;
            this.Totalorderamount = totalorderamount;
            this.Totalordercreated = totalordercreated;
            this.Shiptoaddress = shiptoaddress;
        }

        /// <summary>
        /// Gets or Sets Customerponumber
        /// </summary>
        [DataMember(Name = "customerponumber", EmitDefaultValue = false)]
        public string Customerponumber { get; set; }

        /// <summary>
        /// Total of all the orders including taxes and fees
        /// </summary>
        /// <value>Total of all the orders including taxes and fees</value>
        [DataMember(Name = "totalorderamount", EmitDefaultValue = false)]
        public string Totalorderamount { get; set; }

        /// <summary>
        /// Number of orders created, in some cases we may create more than one order.
        /// </summary>
        /// <value>Number of orders created, in some cases we may create more than one order.</value>
        [DataMember(Name = "totalordercreated", EmitDefaultValue = false)]
        public string Totalordercreated { get; set; }

        /// <summary>
        /// Gets or Sets Shiptoaddress
        /// </summary>
        [DataMember(Name = "shiptoaddress", EmitDefaultValue = false)]
        public OrderCreateResponseServiceresponseOrdersummaryShiptoaddress Shiptoaddress { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCreateResponseServiceresponseOrdersummary {\n");
            sb.Append("  Customerponumber: ").Append(Customerponumber).Append("\n");
            sb.Append("  Totalorderamount: ").Append(Totalorderamount).Append("\n");
            sb.Append("  Totalordercreated: ").Append(Totalordercreated).Append("\n");
            sb.Append("  Shiptoaddress: ").Append(Shiptoaddress).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
