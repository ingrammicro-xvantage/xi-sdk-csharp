/*
 * XI Sdk Resellers
 *
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of APIs and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Mime;
using xi.sdk.resellers.Client;
using xi.sdk.resellers.Model;

namespace xi.sdk.resellers.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReturnsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Returns Details
        /// </summary>
        /// <remarks>
        /// The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <returns>ReturnsDetailsResponse</returns>
        ReturnsDetailsResponse GetResellersV6Returnsdetails(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?));

        /// <summary>
        /// Returns Details
        /// </summary>
        /// <remarks>
        /// The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <returns>ApiResponse of ReturnsDetailsResponse</returns>
        ApiResponse<ReturnsDetailsResponse> GetResellersV6ReturnsdetailsWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?));
        /// <summary>
        /// Returns Search
        /// </summary>
        /// <remarks>
        /// The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <returns>ReturnsSearchResponse</returns>
        ReturnsSearchResponse GetResellersV6Returnssearch(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?));

        /// <summary>
        /// Returns Search
        /// </summary>
        /// <remarks>
        /// The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <returns>ApiResponse of ReturnsSearchResponse</returns>
        ApiResponse<ReturnsSearchResponse> GetResellersV6ReturnssearchWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?));
        /// <summary>
        /// Returns Create
        /// </summary>
        /// <remarks>
        /// Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <returns>ReturnsCreateResponse</returns>
        ReturnsCreateResponse PostReturnscreate(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?));

        /// <summary>
        /// Returns Create
        /// </summary>
        /// <remarks>
        /// Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <returns>ApiResponse of ReturnsCreateResponse</returns>
        ApiResponse<ReturnsCreateResponse> PostReturnscreateWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReturnsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Returns Details
        /// </summary>
        /// <remarks>
        /// The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsDetailsResponse</returns>
        System.Threading.Tasks.Task<ReturnsDetailsResponse> GetResellersV6ReturnsdetailsAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns Details
        /// </summary>
        /// <remarks>
        /// The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsDetailsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ReturnsDetailsResponse>> GetResellersV6ReturnsdetailsWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns Search
        /// </summary>
        /// <remarks>
        /// The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsSearchResponse</returns>
        System.Threading.Tasks.Task<ReturnsSearchResponse> GetResellersV6ReturnssearchAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns Search
        /// </summary>
        /// <remarks>
        /// The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsSearchResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ReturnsSearchResponse>> GetResellersV6ReturnssearchWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns Create
        /// </summary>
        /// <remarks>
        /// Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsCreateResponse</returns>
        System.Threading.Tasks.Task<ReturnsCreateResponse> PostReturnscreateAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns Create
        /// </summary>
        /// <remarks>
        /// Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </remarks>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsCreateResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ReturnsCreateResponse>> PostReturnscreateWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReturnsApi : IReturnsApiSync, IReturnsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ReturnsApi : IDisposable, IReturnsApi
    {
        private xi.sdk.resellers.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <returns></returns>
        public ReturnsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        public ReturnsApi(string basePath)
        {
            this.Configuration = xi.sdk.resellers.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.Client.GlobalConfiguration.Instance,
                new xi.sdk.resellers.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new xi.sdk.resellers.Client.ApiClient(this.Configuration.BasePath);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = xi.sdk.resellers.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class using Configuration object.
        /// **IMPORTANT** This will also create an instance of HttpClient, which is less than ideal.
        /// It's better to reuse the <see href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests#issues-with-the-original-httpclient-class-available-in-net">HttpClient and HttpClientHandler</see>.
        /// </summary>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public ReturnsApi(xi.sdk.resellers.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = xi.sdk.resellers.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new xi.sdk.resellers.Client.ApiClient(this.Configuration.BasePath);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = xi.sdk.resellers.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public ReturnsApi(HttpClient client, HttpClientHandler handler = null) : this(client, (string)null, handler)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public ReturnsApi(HttpClient client, string basePath, HttpClientHandler handler = null)
        {
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = xi.sdk.resellers.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.Client.GlobalConfiguration.Instance,
                new xi.sdk.resellers.Client.Configuration { BasePath = basePath }
            );
            this.ApiClient = new xi.sdk.resellers.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client =  this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            this.ExceptionFactory = xi.sdk.resellers.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class using Configuration object.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <param name="handler">An optional instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        /// Some configuration settings will not be applied without passing an HttpClientHandler.
        /// The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public ReturnsApi(HttpClient client, xi.sdk.resellers.Client.Configuration configuration, HttpClientHandler handler = null)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");
            if (client == null) throw new ArgumentNullException("client");

            this.Configuration = xi.sdk.resellers.Client.Configuration.MergeConfigurations(
                xi.sdk.resellers.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.ApiClient = new xi.sdk.resellers.Client.ApiClient(client, this.Configuration.BasePath, handler);
            this.Client = this.ApiClient;
            this.AsynchronousClient = this.ApiClient;
            ExceptionFactory = xi.sdk.resellers.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        /// <exception cref="ArgumentNullException"></exception>
        public ReturnsApi(xi.sdk.resellers.Client.ISynchronousClient client, xi.sdk.resellers.Client.IAsynchronousClient asyncClient, xi.sdk.resellers.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = xi.sdk.resellers.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Disposes resources if they were created by us
        /// </summary>
        public void Dispose()
        {
            this.ApiClient?.Dispose();
        }

        /// <summary>
        /// Holds the ApiClient if created
        /// </summary>
        public xi.sdk.resellers.Client.ApiClient ApiClient { get; set; } = null;

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public xi.sdk.resellers.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public xi.sdk.resellers.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public xi.sdk.resellers.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public xi.sdk.resellers.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Returns Details The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <returns>ReturnsDetailsResponse</returns>
        public ReturnsDetailsResponse GetResellersV6Returnsdetails(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsDetailsResponse> localVarResponse = GetResellersV6ReturnsdetailsWithHttpInfo(iMCustomerNumber, iMCountryCode, iMCorrelationID, caseRequestNumber, iMSenderID);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Details The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <returns>ApiResponse of ReturnsDetailsResponse</returns>
        public xi.sdk.resellers.Client.ApiResponse<ReturnsDetailsResponse> GetResellersV6ReturnsdetailsWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'caseRequestNumber' is set
            if (caseRequestNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'caseRequestNumber' when calling ReturnsApi->GetResellersV6Returnsdetails");

            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("caseRequestNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(caseRequestNumber)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ReturnsDetailsResponse>("/resellers/v6/returns/{caseRequestNumber}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetResellersV6Returnsdetails", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns Details The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsDetailsResponse</returns>
        public async System.Threading.Tasks.Task<ReturnsDetailsResponse> GetResellersV6ReturnsdetailsAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsDetailsResponse> localVarResponse = await GetResellersV6ReturnsdetailsWithHttpInfoAsync(iMCustomerNumber, iMCountryCode, iMCorrelationID, caseRequestNumber, iMSenderID, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Details The Returns Details API will retrieve all the details related to the specific caseRequestNumber.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="caseRequestNumber">A unique return request number.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsDetailsResponse)</returns>
        public async System.Threading.Tasks.Task<xi.sdk.resellers.Client.ApiResponse<ReturnsDetailsResponse>> GetResellersV6ReturnsdetailsWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string caseRequestNumber, string? iMSenderID = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->GetResellersV6Returnsdetails");

            // verify the required parameter 'caseRequestNumber' is set
            if (caseRequestNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'caseRequestNumber' when calling ReturnsApi->GetResellersV6Returnsdetails");


            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("caseRequestNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(caseRequestNumber)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ReturnsDetailsResponse>("/resellers/v6/returns/{caseRequestNumber}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetResellersV6Returnsdetails", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns Search The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <returns>ReturnsSearchResponse</returns>
        public ReturnsSearchResponse GetResellersV6Returnssearch(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsSearchResponse> localVarResponse = GetResellersV6ReturnssearchWithHttpInfo(iMCustomerNumber, iMCountryCode, iMCorrelationID, iMSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Search The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <returns>ApiResponse of ReturnsSearchResponse</returns>
        public xi.sdk.resellers.Client.ApiResponse<ReturnsSearchResponse> GetResellersV6ReturnssearchWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->GetResellersV6Returnssearch");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->GetResellersV6Returnssearch");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->GetResellersV6Returnssearch");

            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (caseRequestNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "caseRequestNumber", caseRequestNumber));
            }
            if (invoiceNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "invoiceNumber", invoiceNumber));
            }
            if (returnClaimId != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnClaimId", returnClaimId));
            }
            if (referenceNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "referenceNumber", referenceNumber));
            }
            if (ingramPartNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "ingramPartNumber", ingramPartNumber));
            }
            if (vendorPartNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "vendorPartNumber", vendorPartNumber));
            }
            if (returnStatusIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnStatus-in", returnStatusIn));
            }
            if (claimStatusIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "claimStatus-in", claimStatusIn));
            }
            if (createdOnBt != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "createdOn-bt", createdOnBt));
            }
            if (modifiedOnBt != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "modifiedOn-bt", modifiedOnBt));
            }
            if (returnReasonIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnReason-in", returnReasonIn));
            }
            if (page != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "page", page));
            }
            if (size != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "size", size));
            }
            if (sort != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "sort", sort));
            }
            if (sortingColumnName != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "sortingColumnName", sortingColumnName));
            }
            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ReturnsSearchResponse>("/resellers/v6/returns/search", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetResellersV6Returnssearch", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns Search The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsSearchResponse</returns>
        public async System.Threading.Tasks.Task<ReturnsSearchResponse> GetResellersV6ReturnssearchAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsSearchResponse> localVarResponse = await GetResellersV6ReturnssearchWithHttpInfoAsync(iMCustomerNumber, iMCountryCode, iMCorrelationID, iMSenderID, caseRequestNumber, invoiceNumber, returnClaimId, referenceNumber, ingramPartNumber, vendorPartNumber, returnStatusIn, claimStatusIn, createdOnBt, modifiedOnBt, returnReasonIn, page, size, sort, sortingColumnName, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Search The Returns Search API, by default, will retrieve all the returns that are associated with the customer’s account. The customer will be able to search returns using the query parameters. The Returns Search response will return the following information:  returnClaimId, caseRequestNumber, createdOn, referenceNumber, and returnReason.
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="caseRequestNumber">A unique return request number. (optional)</param>
        /// <param name="invoiceNumber">The Invoice number for the order. (optional)</param>
        /// <param name="returnClaimId">A unique return claim Id. (optional)</param>
        /// <param name="referenceNumber">The reference number for the return. (optional)</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number. (optional)</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number. (optional)</param>
        /// <param name="returnStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="claimStatusIn">Comma-separated values of pre-defined status. Open, Approved, Partially Approved, Denied, Voided. (optional)</param>
        /// <param name="createdOnBt">The date on which the return request was created.  (optional)</param>
        /// <param name="modifiedOnBt">The date on which the return request was last updated. (optional)</param>
        /// <param name="returnReasonIn">Comma separated Pre-defined value. test, (EW) Express Warehousing, (AR) Account Receivables, (BB) Buy Back, (BE) Stock Balance Exception, (BO) Bill Only, (CE) Credit Dept Use - Credit Exception, (CF) Configuration Fee, (CS ) Customer Service Discretion, (CS1) Customer Service Discretion CS Error, (DE) Defective Exception, (DF) Defective Items, (DI) Direct Credit, (DM) Damaged from Carrier, (DN) Damaged Without Product, (DT) Direct/ Special Order, (DT1) Direct Ship billed, not shipped., (FO) Freight Out, (FX) No-Scan, (IN) Incomplete, (LS) Lost Shipment, (MN) Minimum Order Fee Credit, (OS) Over Shipment, (PR) Pricing Error, (RF) Refusal Credit, (RI) Re-Invoice, (RP) Return For Repair, (RT) Return Not Credited, (RTD) RCN, (SB) Stock Balance, (SD) Sales Discretion, (SH) Incorrect Shipping And Handling, (SS) Short Shipment, (SSK) Short Ship kit, (SW) Sales Writeoff, (TE) Opened Return, (TR) Training Refund, (TX) Tax Credit, (WS) Wrong Sales Sealed, (WW) Wrong Warehouse, (FS) Warehouse Failed Serial# Capture, Latin America Vebdor Credits, Select Source, ITAD - Trade-in Credit, Withholding Tax (optional)</param>
        /// <param name="page">Number of page. (optional)</param>
        /// <param name="size">The submitted pagesize, default is 25 (optional)</param>
        /// <param name="sort">Refers to the column selected to apply the sorting criteria. (optional)</param>
        /// <param name="sortingColumnName">The column name which will be sorted on. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsSearchResponse)</returns>
        public async System.Threading.Tasks.Task<xi.sdk.resellers.Client.ApiResponse<ReturnsSearchResponse>> GetResellersV6ReturnssearchWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), string? caseRequestNumber = default(string?), string? invoiceNumber = default(string?), string? returnClaimId = default(string?), string? referenceNumber = default(string?), string? ingramPartNumber = default(string?), string? vendorPartNumber = default(string?), string? returnStatusIn = default(string?), string? claimStatusIn = default(string?), string? createdOnBt = default(string?), string? modifiedOnBt = default(string?), string? returnReasonIn = default(string?), string? page = default(string?), string? size = default(string?), string? sort = default(string?), string? sortingColumnName = default(string?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->GetResellersV6Returnssearch");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->GetResellersV6Returnssearch");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->GetResellersV6Returnssearch");


            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (caseRequestNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "caseRequestNumber", caseRequestNumber));
            }
            if (invoiceNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "invoiceNumber", invoiceNumber));
            }
            if (returnClaimId != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnClaimId", returnClaimId));
            }
            if (referenceNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "referenceNumber", referenceNumber));
            }
            if (ingramPartNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "ingramPartNumber", ingramPartNumber));
            }
            if (vendorPartNumber != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "vendorPartNumber", vendorPartNumber));
            }
            if (returnStatusIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnStatus-in", returnStatusIn));
            }
            if (claimStatusIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "claimStatus-in", claimStatusIn));
            }
            if (createdOnBt != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "createdOn-bt", createdOnBt));
            }
            if (modifiedOnBt != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "modifiedOn-bt", modifiedOnBt));
            }
            if (returnReasonIn != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "returnReason-in", returnReasonIn));
            }
            if (page != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "page", page));
            }
            if (size != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "size", size));
            }
            if (sort != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "sort", sort));
            }
            if (sortingColumnName != null)
            {
                localVarRequestOptions.QueryParameters.Add(xi.sdk.resellers.Client.ClientUtils.ParameterToMultiMap("", "sortingColumnName", sortingColumnName));
            }
            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<ReturnsSearchResponse>("/resellers/v6/returns/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetResellersV6Returnssearch", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns Create Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <returns>ReturnsCreateResponse</returns>
        public ReturnsCreateResponse PostReturnscreate(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsCreateResponse> localVarResponse = PostReturnscreateWithHttpInfo(iMCustomerNumber, iMCountryCode, iMCorrelationID, iMSenderID, returnsCreateRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Create Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <returns>ApiResponse of ReturnsCreateResponse</returns>
        public xi.sdk.resellers.Client.ApiResponse<ReturnsCreateResponse> PostReturnscreateWithHttpInfo(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->PostReturnscreate");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->PostReturnscreate");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->PostReturnscreate");

            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }
            localVarRequestOptions.Data = returnsCreateRequest;

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ReturnsCreateResponse>("/resellers/v6/returns/create", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostReturnscreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns Create Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ReturnsCreateResponse</returns>
        public async System.Threading.Tasks.Task<ReturnsCreateResponse> PostReturnscreateAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi.sdk.resellers.Client.ApiResponse<ReturnsCreateResponse> localVarResponse = await PostReturnscreateWithHttpInfoAsync(iMCustomerNumber, iMCountryCode, iMCorrelationID, iMSenderID, returnsCreateRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns Create Return create endpoint will allow customers to create a return request. In order to create a request, the customer must provide either ingramPartNumber or vendorPartNumber along with other required fields listed below. 
        /// </summary>
        /// <exception cref="xi.sdk.resellers.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="iMCustomerNumber">Your unique Ingram Micro customer number.</param>
        /// <param name="iMCountryCode">Two-character ISO country code.</param>
        /// <param name="iMCorrelationID">Unique transaction number to identify each transaction across all the systems.</param>
        /// <param name="iMSenderID">Unique value used to identify the sender of the transaction. Example: MyCompany (optional)</param>
        /// <param name="returnsCreateRequest"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ReturnsCreateResponse)</returns>
        public async System.Threading.Tasks.Task<xi.sdk.resellers.Client.ApiResponse<ReturnsCreateResponse>> PostReturnscreateWithHttpInfoAsync(string iMCustomerNumber, string iMCountryCode, string iMCorrelationID, string? iMSenderID = default(string?), ReturnsCreateRequest? returnsCreateRequest = default(ReturnsCreateRequest?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'iMCustomerNumber' is set
            if (iMCustomerNumber == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCustomerNumber' when calling ReturnsApi->PostReturnscreate");

            // verify the required parameter 'iMCountryCode' is set
            if (iMCountryCode == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCountryCode' when calling ReturnsApi->PostReturnscreate");

            // verify the required parameter 'iMCorrelationID' is set
            if (iMCorrelationID == null)
                throw new xi.sdk.resellers.Client.ApiException(400, "Missing required parameter 'iMCorrelationID' when calling ReturnsApi->PostReturnscreate");


            xi.sdk.resellers.Client.RequestOptions localVarRequestOptions = new xi.sdk.resellers.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };


            var localVarContentType = xi.sdk.resellers.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = xi.sdk.resellers.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.HeaderParameters.Add("IM-CustomerNumber", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCustomerNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CountryCode", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCountryCode)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("IM-CorrelationID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMCorrelationID)); // header parameter
            if (iMSenderID != null)
            {
                localVarRequestOptions.HeaderParameters.Add("IM-SenderID", xi.sdk.resellers.Client.ClientUtils.ParameterToString(iMSenderID)); // header parameter
            }
            localVarRequestOptions.Data = returnsCreateRequest;

            // authentication (application) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<ReturnsCreateResponse>("/resellers/v6/returns/create", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PostReturnscreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
