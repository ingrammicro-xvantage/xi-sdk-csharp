/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderCreateRequestOrdercreaterequestOrdercreatedetails
    /// </summary>
    [DataContract(Name = "orderCreateRequest_ordercreaterequest_ordercreatedetails")]
    public partial class OrderCreateRequestOrdercreaterequestOrdercreatedetails : IValidatableObject
    {
        /// <summary>
        /// Order Type - Standard orders, Direct ship orders
        /// </summary>
        /// <value>Order Type - Standard orders, Direct ship orders</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OrdertypeEnum
        {
            /// <summary>
            /// Enum Standard for value: Standard
            /// </summary>
            [EnumMember(Value = "Standard")]
            Standard = 1,

            /// <summary>
            /// Enum DirectShip for value: Direct Ship
            /// </summary>
            [EnumMember(Value = "Direct Ship")]
            DirectShip = 2
        }


        /// <summary>
        /// Order Type - Standard orders, Direct ship orders
        /// </summary>
        /// <value>Order Type - Standard orders, Direct ship orders</value>
        [DataMember(Name = "ordertype", IsRequired = true, EmitDefaultValue = true)]
        public OrdertypeEnum Ordertype { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateRequestOrdercreaterequestOrdercreatedetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderCreateRequestOrdercreaterequestOrdercreatedetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateRequestOrdercreaterequestOrdercreatedetails" /> class.
        /// </summary>
        /// <param name="customerponumber">The customers unique Purchase Order number. Keep it unique to retrieve order information (required).</param>
        /// <param name="ordertype">Order Type - Standard orders, Direct ship orders (required).</param>
        /// <param name="enduserordernumber">Customers End-user PO number.</param>
        /// <param name="billtosuffix">Designates flooring acct to be used.</param>
        /// <param name="shiptosuffix">Applies to customers with multiple ship to locations (store locations).</param>
        /// <param name="shiptoaddress">shiptoaddress (required).</param>
        /// <param name="carriercode">A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates..</param>
        /// <param name="thirdpartyfreightaccountnumber">Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.) .</param>
        /// <param name="specialbidnumber">This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order..</param>
        /// <param name="lines">lines (required).</param>
        /// <param name="extendedspecs">extendedspecs.</param>
        public OrderCreateRequestOrdercreaterequestOrdercreatedetails(string customerponumber = default(string), OrdertypeEnum ordertype = default(OrdertypeEnum), string enduserordernumber = default(string), string billtosuffix = default(string), string shiptosuffix = default(string), OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress shiptoaddress = default(OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress), string carriercode = default(string), string thirdpartyfreightaccountnumber = default(string), string specialbidnumber = default(string), List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> lines = default(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner>), List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> extendedspecs = default(List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner>))
        {
            // to ensure "customerponumber" is required (not null)
            if (customerponumber == null)
            {
                throw new ArgumentNullException("customerponumber is a required property for OrderCreateRequestOrdercreaterequestOrdercreatedetails and cannot be null");
            }
            this.Customerponumber = customerponumber;
            this.Ordertype = ordertype;
            // to ensure "shiptoaddress" is required (not null)
            if (shiptoaddress == null)
            {
                throw new ArgumentNullException("shiptoaddress is a required property for OrderCreateRequestOrdercreaterequestOrdercreatedetails and cannot be null");
            }
            this.Shiptoaddress = shiptoaddress;
            // to ensure "lines" is required (not null)
            if (lines == null)
            {
                throw new ArgumentNullException("lines is a required property for OrderCreateRequestOrdercreaterequestOrdercreatedetails and cannot be null");
            }
            this.Lines = lines;
            this.Enduserordernumber = enduserordernumber;
            this.Billtosuffix = billtosuffix;
            this.Shiptosuffix = shiptosuffix;
            this.Carriercode = carriercode;
            this.Thirdpartyfreightaccountnumber = thirdpartyfreightaccountnumber;
            this.Specialbidnumber = specialbidnumber;
            this.Extendedspecs = extendedspecs;
        }

        /// <summary>
        /// The customers unique Purchase Order number. Keep it unique to retrieve order information
        /// </summary>
        /// <value>The customers unique Purchase Order number. Keep it unique to retrieve order information</value>
        [DataMember(Name = "customerponumber", IsRequired = true, EmitDefaultValue = true)]
        public string Customerponumber { get; set; }

        /// <summary>
        /// Customers End-user PO number
        /// </summary>
        /// <value>Customers End-user PO number</value>
        [DataMember(Name = "enduserordernumber", EmitDefaultValue = false)]
        public string Enduserordernumber { get; set; }

        /// <summary>
        /// Designates flooring acct to be used
        /// </summary>
        /// <value>Designates flooring acct to be used</value>
        [DataMember(Name = "billtosuffix", EmitDefaultValue = false)]
        public string Billtosuffix { get; set; }

        /// <summary>
        /// Applies to customers with multiple ship to locations (store locations)
        /// </summary>
        /// <value>Applies to customers with multiple ship to locations (store locations)</value>
        [DataMember(Name = "shiptosuffix", EmitDefaultValue = false)]
        public string Shiptosuffix { get; set; }

        /// <summary>
        /// Gets or Sets Shiptoaddress
        /// </summary>
        [DataMember(Name = "shiptoaddress", IsRequired = true, EmitDefaultValue = true)]
        public OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress Shiptoaddress { get; set; }

        /// <summary>
        /// A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates.
        /// </summary>
        /// <value>A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates.</value>
        [DataMember(Name = "carriercode", EmitDefaultValue = false)]
        public string Carriercode { get; set; }

        /// <summary>
        /// Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.) 
        /// </summary>
        /// <value>Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.) </value>
        [DataMember(Name = "thirdpartyfreightaccountnumber", EmitDefaultValue = false)]
        public string Thirdpartyfreightaccountnumber { get; set; }

        /// <summary>
        /// This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order.
        /// </summary>
        /// <value>This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order.</value>
        [DataMember(Name = "specialbidnumber", EmitDefaultValue = false)]
        public string Specialbidnumber { get; set; }

        /// <summary>
        /// Gets or Sets Lines
        /// </summary>
        [DataMember(Name = "lines", IsRequired = true, EmitDefaultValue = true)]
        public List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner> Lines { get; set; }

        /// <summary>
        /// Gets or Sets Extendedspecs
        /// </summary>
        [DataMember(Name = "extendedspecs", EmitDefaultValue = false)]
        public List<OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner> Extendedspecs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCreateRequestOrdercreaterequestOrdercreatedetails {\n");
            sb.Append("  Customerponumber: ").Append(Customerponumber).Append("\n");
            sb.Append("  Ordertype: ").Append(Ordertype).Append("\n");
            sb.Append("  Enduserordernumber: ").Append(Enduserordernumber).Append("\n");
            sb.Append("  Billtosuffix: ").Append(Billtosuffix).Append("\n");
            sb.Append("  Shiptosuffix: ").Append(Shiptosuffix).Append("\n");
            sb.Append("  Shiptoaddress: ").Append(Shiptoaddress).Append("\n");
            sb.Append("  Carriercode: ").Append(Carriercode).Append("\n");
            sb.Append("  Thirdpartyfreightaccountnumber: ").Append(Thirdpartyfreightaccountnumber).Append("\n");
            sb.Append("  Specialbidnumber: ").Append(Specialbidnumber).Append("\n");
            sb.Append("  Lines: ").Append(Lines).Append("\n");
            sb.Append("  Extendedspecs: ").Append(Extendedspecs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Customerponumber (string) maxLength
            if (this.Customerponumber != null && this.Customerponumber.Length > 18)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Customerponumber, length must be less than 18.", new [] { "Customerponumber" });
            }

            // Customerponumber (string) minLength
            if (this.Customerponumber != null && this.Customerponumber.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Customerponumber, length must be greater than 1.", new [] { "Customerponumber" });
            }

            // Enduserordernumber (string) maxLength
            if (this.Enduserordernumber != null && this.Enduserordernumber.Length > 18)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Enduserordernumber, length must be less than 18.", new [] { "Enduserordernumber" });
            }

            // Enduserordernumber (string) minLength
            if (this.Enduserordernumber != null && this.Enduserordernumber.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Enduserordernumber, length must be greater than 0.", new [] { "Enduserordernumber" });
            }

            // Billtosuffix (string) maxLength
            if (this.Billtosuffix != null && this.Billtosuffix.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Billtosuffix, length must be less than 3.", new [] { "Billtosuffix" });
            }

            // Shiptosuffix (string) maxLength
            if (this.Shiptosuffix != null && this.Shiptosuffix.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Shiptosuffix, length must be less than 3.", new [] { "Shiptosuffix" });
            }

            // Carriercode (string) maxLength
            if (this.Carriercode != null && this.Carriercode.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Carriercode, length must be less than 2.", new [] { "Carriercode" });
            }

            yield break;
        }
    }

}
