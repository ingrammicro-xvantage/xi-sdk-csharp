/*
 * XI Sdk Resellers
 *
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner
    /// </summary>
    [DataContract(Name = "orderCreateResponse_serviceresponse_ordercreateresponse_inner_Lines_inner")]
    public partial class OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner" /> class.
        /// </summary>
        /// <param name="linetype">“P”-Line or SKU Number “C”-Comment Line.</param>
        /// <param name="globallinenumber">Ingram generated line number.</param>
        /// <param name="partnumber">Ingram Micro Sku Number.</param>
        /// <param name="globalskuid">globalskuid.</param>
        /// <param name="linenumber">linenumber.</param>
        /// <param name="carriercode">Transportation 2 digit codes.</param>
        /// <param name="carrierdescription">Transportation Carrier Name.</param>
        /// <param name="requestedunitprice">Price requested by reseller. Price Variance can be set up by Ingram Micro Sales Rep.</param>
        /// <param name="requestedquantity">Quanity Requested.</param>
        /// <param name="confirmedquantity">Quanity Shipped.</param>
        /// <param name="backorderedquantity">Quanity of units that didn’t ship.</param>
        /// <param name="unitproductprice">Price Per Unit.</param>
        /// <param name="netamount">Total amount. Quantity X Unit Price.</param>
        /// <param name="warehouseid">warehouseid.</param>
        /// <param name="ordersuffix">Use order suffix with the globalorderid for this line item..</param>
        public OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner(string linetype = default(string), string globallinenumber = default(string), string partnumber = default(string), string globalskuid = default(string), string linenumber = default(string), string carriercode = default(string), string carrierdescription = default(string), decimal requestedunitprice = default(decimal), int requestedquantity = default(int), int confirmedquantity = default(int), int backorderedquantity = default(int), decimal unitproductprice = default(decimal), decimal netamount = default(decimal), string warehouseid = default(string), string ordersuffix = default(string))
        {
            this.Linetype = linetype;
            this.Globallinenumber = globallinenumber;
            this.Partnumber = partnumber;
            this.Globalskuid = globalskuid;
            this.Linenumber = linenumber;
            this.Carriercode = carriercode;
            this.Carrierdescription = carrierdescription;
            this.Requestedunitprice = requestedunitprice;
            this.Requestedquantity = requestedquantity;
            this.Confirmedquantity = confirmedquantity;
            this.Backorderedquantity = backorderedquantity;
            this.Unitproductprice = unitproductprice;
            this.Netamount = netamount;
            this.Warehouseid = warehouseid;
            this.Ordersuffix = ordersuffix;
        }

        /// <summary>
        /// “P”-Line or SKU Number “C”-Comment Line
        /// </summary>
        /// <value>“P”-Line or SKU Number “C”-Comment Line</value>
        [DataMember(Name = "linetype", EmitDefaultValue = false)]
        public string Linetype { get; set; }

        /// <summary>
        /// Ingram generated line number
        /// </summary>
        /// <value>Ingram generated line number</value>
        [DataMember(Name = "globallinenumber", EmitDefaultValue = false)]
        public string Globallinenumber { get; set; }

        /// <summary>
        /// Ingram Micro Sku Number
        /// </summary>
        /// <value>Ingram Micro Sku Number</value>
        [DataMember(Name = "partnumber", EmitDefaultValue = false)]
        public string Partnumber { get; set; }

        /// <summary>
        /// Gets or Sets Globalskuid
        /// </summary>
        [DataMember(Name = "globalskuid", EmitDefaultValue = false)]
        public string Globalskuid { get; set; }

        /// <summary>
        /// Gets or Sets Linenumber
        /// </summary>
        [DataMember(Name = "linenumber", EmitDefaultValue = false)]
        public string Linenumber { get; set; }

        /// <summary>
        /// Transportation 2 digit codes
        /// </summary>
        /// <value>Transportation 2 digit codes</value>
        [DataMember(Name = "carriercode", EmitDefaultValue = false)]
        public string Carriercode { get; set; }

        /// <summary>
        /// Transportation Carrier Name
        /// </summary>
        /// <value>Transportation Carrier Name</value>
        [DataMember(Name = "carrierdescription", EmitDefaultValue = false)]
        public string Carrierdescription { get; set; }

        /// <summary>
        /// Price requested by reseller. Price Variance can be set up by Ingram Micro Sales Rep
        /// </summary>
        /// <value>Price requested by reseller. Price Variance can be set up by Ingram Micro Sales Rep</value>
        [DataMember(Name = "requestedunitprice", EmitDefaultValue = false)]
        public decimal Requestedunitprice { get; set; }

        /// <summary>
        /// Quanity Requested
        /// </summary>
        /// <value>Quanity Requested</value>
        [DataMember(Name = "requestedquantity", EmitDefaultValue = false)]
        public int Requestedquantity { get; set; }

        /// <summary>
        /// Quanity Shipped
        /// </summary>
        /// <value>Quanity Shipped</value>
        [DataMember(Name = "confirmedquantity", EmitDefaultValue = false)]
        public int Confirmedquantity { get; set; }

        /// <summary>
        /// Quanity of units that didn’t ship
        /// </summary>
        /// <value>Quanity of units that didn’t ship</value>
        [DataMember(Name = "backorderedquantity", EmitDefaultValue = false)]
        public int Backorderedquantity { get; set; }

        /// <summary>
        /// Price Per Unit
        /// </summary>
        /// <value>Price Per Unit</value>
        [DataMember(Name = "unitproductprice", EmitDefaultValue = false)]
        public decimal Unitproductprice { get; set; }

        /// <summary>
        /// Total amount. Quantity X Unit Price
        /// </summary>
        /// <value>Total amount. Quantity X Unit Price</value>
        [DataMember(Name = "netamount", EmitDefaultValue = false)]
        public decimal Netamount { get; set; }

        /// <summary>
        /// Gets or Sets Warehouseid
        /// </summary>
        [DataMember(Name = "warehouseid", EmitDefaultValue = false)]
        public string Warehouseid { get; set; }

        /// <summary>
        /// Use order suffix with the globalorderid for this line item.
        /// </summary>
        /// <value>Use order suffix with the globalorderid for this line item.</value>
        [DataMember(Name = "ordersuffix", EmitDefaultValue = false)]
        public string Ordersuffix { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderCreateResponseServiceresponseOrdercreateresponseInnerLinesInner {\n");
            sb.Append("  Linetype: ").Append(Linetype).Append("\n");
            sb.Append("  Globallinenumber: ").Append(Globallinenumber).Append("\n");
            sb.Append("  Partnumber: ").Append(Partnumber).Append("\n");
            sb.Append("  Globalskuid: ").Append(Globalskuid).Append("\n");
            sb.Append("  Linenumber: ").Append(Linenumber).Append("\n");
            sb.Append("  Carriercode: ").Append(Carriercode).Append("\n");
            sb.Append("  Carrierdescription: ").Append(Carrierdescription).Append("\n");
            sb.Append("  Requestedunitprice: ").Append(Requestedunitprice).Append("\n");
            sb.Append("  Requestedquantity: ").Append(Requestedquantity).Append("\n");
            sb.Append("  Confirmedquantity: ").Append(Confirmedquantity).Append("\n");
            sb.Append("  Backorderedquantity: ").Append(Backorderedquantity).Append("\n");
            sb.Append("  Unitproductprice: ").Append(Unitproductprice).Append("\n");
            sb.Append("  Netamount: ").Append(Netamount).Append("\n");
            sb.Append("  Warehouseid: ").Append(Warehouseid).Append("\n");
            sb.Append("  Ordersuffix: ").Append(Ordersuffix).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
