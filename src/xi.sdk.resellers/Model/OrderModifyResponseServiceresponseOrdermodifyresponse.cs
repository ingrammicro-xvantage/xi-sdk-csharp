/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderModifyResponseServiceresponseOrdermodifyresponse
    /// </summary>
    [DataContract(Name = "orderModifyResponse_serviceresponse_ordermodifyresponse")]
    public partial class OrderModifyResponseServiceresponseOrdermodifyresponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderModifyResponseServiceresponseOrdermodifyresponse" /> class.
        /// </summary>
        /// <param name="responseflag">responseflag.</param>
        /// <param name="errortype">errortype.</param>
        /// <param name="acktriggered">acktriggered.</param>
        /// <param name="warncode">warncode.</param>
        /// <param name="headerresponse">headerresponse.</param>
        public OrderModifyResponseServiceresponseOrdermodifyresponse(string responseflag = default(string), string errortype = default(string), string acktriggered = default(string), string warncode = default(string), string headerresponse = default(string))
        {
            this.Responseflag = responseflag;
            this.Errortype = errortype;
            this.Acktriggered = acktriggered;
            this.Warncode = warncode;
            this.Headerresponse = headerresponse;
        }

        /// <summary>
        /// Gets or Sets Responseflag
        /// </summary>
        [DataMember(Name = "responseflag", EmitDefaultValue = false)]
        public string Responseflag { get; set; }

        /// <summary>
        /// Gets or Sets Errortype
        /// </summary>
        [DataMember(Name = "errortype", EmitDefaultValue = false)]
        public string Errortype { get; set; }

        /// <summary>
        /// Gets or Sets Acktriggered
        /// </summary>
        [DataMember(Name = "acktriggered", EmitDefaultValue = false)]
        public string Acktriggered { get; set; }

        /// <summary>
        /// Gets or Sets Warncode
        /// </summary>
        [DataMember(Name = "warncode", EmitDefaultValue = false)]
        public string Warncode { get; set; }

        /// <summary>
        /// Gets or Sets Headerresponse
        /// </summary>
        [DataMember(Name = "headerresponse", EmitDefaultValue = false)]
        public string Headerresponse { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderModifyResponseServiceresponseOrdermodifyresponse {\n");
            sb.Append("  Responseflag: ").Append(Responseflag).Append("\n");
            sb.Append("  Errortype: ").Append(Errortype).Append("\n");
            sb.Append("  Acktriggered: ").Append(Acktriggered).Append("\n");
            sb.Append("  Warncode: ").Append(Warncode).Append("\n");
            sb.Append("  Headerresponse: ").Append(Headerresponse).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
