/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// QuoteDetailsQuoteDetailResponseRetrieveQuoteResponseEndUser
    /// </summary>
    [DataContract(Name = "quoteDetails_quoteDetailResponse_retrieveQuoteResponse_endUser")]
    public partial class QuoteDetailsQuoteDetailResponseRetrieveQuoteResponseEndUser : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QuoteDetailsQuoteDetailResponseRetrieveQuoteResponseEndUser" /> class.
        /// </summary>
        /// <param name="endUserName">endUserName.</param>
        /// <param name="endUserAddress">endUserAddress.</param>
        /// <param name="endUserAddress2">endUserAddress2.</param>
        /// <param name="endUserAddress3">endUserAddress3.</param>
        /// <param name="endUserCity">endUserCity.</param>
        /// <param name="endUserState">endUserState.</param>
        /// <param name="endUserEmail">endUserEmail.</param>
        /// <param name="endUserPhone">endUserPhone.</param>
        /// <param name="endUserZipCode">endUserZipCode.</param>
        /// <param name="endUserContactName">endUserContactName.</param>
        /// <param name="endUserMarketSegment">endUserMarketSegment.</param>
        public QuoteDetailsQuoteDetailResponseRetrieveQuoteResponseEndUser(string endUserName = default(string), string endUserAddress = default(string), string endUserAddress2 = default(string), string endUserAddress3 = default(string), string endUserCity = default(string), string endUserState = default(string), string endUserEmail = default(string), string endUserPhone = default(string), string endUserZipCode = default(string), string endUserContactName = default(string), string endUserMarketSegment = default(string))
        {
            this.EndUserName = endUserName;
            this.EndUserAddress = endUserAddress;
            this.EndUserAddress2 = endUserAddress2;
            this.EndUserAddress3 = endUserAddress3;
            this.EndUserCity = endUserCity;
            this.EndUserState = endUserState;
            this.EndUserEmail = endUserEmail;
            this.EndUserPhone = endUserPhone;
            this.EndUserZipCode = endUserZipCode;
            this.EndUserContactName = endUserContactName;
            this.EndUserMarketSegment = endUserMarketSegment;
        }

        /// <summary>
        /// Gets or Sets EndUserName
        /// </summary>
        [DataMember(Name = "endUserName", EmitDefaultValue = false)]
        public string EndUserName { get; set; }

        /// <summary>
        /// Gets or Sets EndUserAddress
        /// </summary>
        [DataMember(Name = "endUserAddress", EmitDefaultValue = false)]
        public string EndUserAddress { get; set; }

        /// <summary>
        /// Gets or Sets EndUserAddress2
        /// </summary>
        [DataMember(Name = "endUserAddress2", EmitDefaultValue = false)]
        public string EndUserAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets EndUserAddress3
        /// </summary>
        [DataMember(Name = "endUserAddress3", EmitDefaultValue = false)]
        public string EndUserAddress3 { get; set; }

        /// <summary>
        /// Gets or Sets EndUserCity
        /// </summary>
        [DataMember(Name = "endUserCity", EmitDefaultValue = false)]
        public string EndUserCity { get; set; }

        /// <summary>
        /// Gets or Sets EndUserState
        /// </summary>
        [DataMember(Name = "endUserState", EmitDefaultValue = false)]
        public string EndUserState { get; set; }

        /// <summary>
        /// Gets or Sets EndUserEmail
        /// </summary>
        [DataMember(Name = "endUserEmail", EmitDefaultValue = false)]
        public string EndUserEmail { get; set; }

        /// <summary>
        /// Gets or Sets EndUserPhone
        /// </summary>
        [DataMember(Name = "endUserPhone", EmitDefaultValue = false)]
        public string EndUserPhone { get; set; }

        /// <summary>
        /// Gets or Sets EndUserZipCode
        /// </summary>
        [DataMember(Name = "endUserZipCode", EmitDefaultValue = false)]
        public string EndUserZipCode { get; set; }

        /// <summary>
        /// Gets or Sets EndUserContactName
        /// </summary>
        [DataMember(Name = "endUserContactName", EmitDefaultValue = false)]
        public string EndUserContactName { get; set; }

        /// <summary>
        /// Gets or Sets EndUserMarketSegment
        /// </summary>
        [DataMember(Name = "endUserMarketSegment", EmitDefaultValue = false)]
        public string EndUserMarketSegment { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QuoteDetailsQuoteDetailResponseRetrieveQuoteResponseEndUser {\n");
            sb.Append("  EndUserName: ").Append(EndUserName).Append("\n");
            sb.Append("  EndUserAddress: ").Append(EndUserAddress).Append("\n");
            sb.Append("  EndUserAddress2: ").Append(EndUserAddress2).Append("\n");
            sb.Append("  EndUserAddress3: ").Append(EndUserAddress3).Append("\n");
            sb.Append("  EndUserCity: ").Append(EndUserCity).Append("\n");
            sb.Append("  EndUserState: ").Append(EndUserState).Append("\n");
            sb.Append("  EndUserEmail: ").Append(EndUserEmail).Append("\n");
            sb.Append("  EndUserPhone: ").Append(EndUserPhone).Append("\n");
            sb.Append("  EndUserZipCode: ").Append(EndUserZipCode).Append("\n");
            sb.Append("  EndUserContactName: ").Append(EndUserContactName).Append("\n");
            sb.Append("  EndUserMarketSegment: ").Append(EndUserMarketSegment).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
