/*
 * XI Sdk Resellers
 *
 * For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInnerSpecialPricingInner
    /// </summary>
    [DataContract(Name = "PriceAndAvailabilityResponse_inner_subscriptionPrice_inner_options_inner_discounts_inner_specialPricing_inner")]
    public partial class PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInnerSpecialPricingInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInnerSpecialPricingInner" /> class.
        /// </summary>
        /// <param name="currencyCode">The 3-digit ISO currency code..</param>
        /// <param name="discount">The discount for the line item..</param>
        /// <param name="discountType">The type of the discount.</param>
        /// <param name="discountQtyLimit">The quantity available at the discounted price.</param>
        /// <param name="discountExpiryDate">The date when discount expires..</param>
        /// <param name="vendorProgramName">The vendors discount program name..</param>
        public PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInnerSpecialPricingInner(string currencyCode = default(string), decimal? discount = default(decimal?), string discountType = default(string), int? discountQtyLimit = default(int?), string discountExpiryDate = default(string), string vendorProgramName = default(string))
        {
            this.CurrencyCode = currencyCode;
            this.Discount = discount;
            this.DiscountType = discountType;
            this.DiscountQtyLimit = discountQtyLimit;
            this.DiscountExpiryDate = discountExpiryDate;
            this.VendorProgramName = vendorProgramName;
        }

        /// <summary>
        /// The 3-digit ISO currency code.
        /// </summary>
        /// <value>The 3-digit ISO currency code.</value>
        [DataMember(Name = "currencyCode", EmitDefaultValue = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// The discount for the line item.
        /// </summary>
        /// <value>The discount for the line item.</value>
        [DataMember(Name = "discount", EmitDefaultValue = true)]
        public decimal? Discount { get; set; }

        /// <summary>
        /// The type of the discount
        /// </summary>
        /// <value>The type of the discount</value>
        [DataMember(Name = "discountType", EmitDefaultValue = true)]
        public string DiscountType { get; set; }

        /// <summary>
        /// The quantity available at the discounted price
        /// </summary>
        /// <value>The quantity available at the discounted price</value>
        [DataMember(Name = "discountQtyLimit", EmitDefaultValue = true)]
        public int? DiscountQtyLimit { get; set; }

        /// <summary>
        /// The date when discount expires.
        /// </summary>
        /// <value>The date when discount expires.</value>
        [DataMember(Name = "discountExpiryDate", EmitDefaultValue = true)]
        public string DiscountExpiryDate { get; set; }

        /// <summary>
        /// The vendors discount program name.
        /// </summary>
        /// <value>The vendors discount program name.</value>
        [DataMember(Name = "vendorProgramName", EmitDefaultValue = true)]
        public string VendorProgramName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PriceAndAvailabilityResponseInnerSubscriptionPriceInnerOptionsInnerDiscountsInnerSpecialPricingInner {\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("  DiscountType: ").Append(DiscountType).Append("\n");
            sb.Append("  DiscountQtyLimit: ").Append(DiscountQtyLimit).Append("\n");
            sb.Append("  DiscountExpiryDate: ").Append(DiscountExpiryDate).Append("\n");
            sb.Append("  VendorProgramName: ").Append(VendorProgramName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
