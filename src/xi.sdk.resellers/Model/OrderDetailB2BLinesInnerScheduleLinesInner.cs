/*
 * XI Sdk Resellers
 *
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of APIs and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderDetailB2BLinesInnerScheduleLinesInner
    /// </summary>
    [DataContract(Name = "OrderDetailB2B_lines_inner_scheduleLines_inner")]
    public partial class OrderDetailB2BLinesInnerScheduleLinesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailB2BLinesInnerScheduleLinesInner" /> class.
        /// </summary>
        /// <param name="lineNumber">Line number..</param>
        /// <param name="scheduleLineDate">schedule Line Date..</param>
        /// <param name="requestedQuantity">Requested quantity..</param>
        /// <param name="confirmedQuantity">Confirmed quantity..</param>
        /// <param name="goodsIssueDate">Date when good issued..</param>
        public OrderDetailB2BLinesInnerScheduleLinesInner(string lineNumber = default(string), string scheduleLineDate = default(string), string requestedQuantity = default(string), string confirmedQuantity = default(string), string goodsIssueDate = default(string))
        {
            this.LineNumber = lineNumber;
            this.ScheduleLineDate = scheduleLineDate;
            this.RequestedQuantity = requestedQuantity;
            this.ConfirmedQuantity = confirmedQuantity;
            this.GoodsIssueDate = goodsIssueDate;
        }

        /// <summary>
        /// Line number.
        /// </summary>
        /// <value>Line number.</value>
        [DataMember(Name = "lineNumber", EmitDefaultValue = false)]
        public string LineNumber { get; set; }

        /// <summary>
        /// schedule Line Date.
        /// </summary>
        /// <value>schedule Line Date.</value>
        [DataMember(Name = "scheduleLineDate", EmitDefaultValue = false)]
        public string ScheduleLineDate { get; set; }

        /// <summary>
        /// Requested quantity.
        /// </summary>
        /// <value>Requested quantity.</value>
        [DataMember(Name = "requestedQuantity", EmitDefaultValue = false)]
        public string RequestedQuantity { get; set; }

        /// <summary>
        /// Confirmed quantity.
        /// </summary>
        /// <value>Confirmed quantity.</value>
        [DataMember(Name = "confirmedQuantity", EmitDefaultValue = false)]
        public string ConfirmedQuantity { get; set; }

        /// <summary>
        /// Date when good issued.
        /// </summary>
        /// <value>Date when good issued.</value>
        [DataMember(Name = "goodsIssueDate", EmitDefaultValue = false)]
        public string GoodsIssueDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailB2BLinesInnerScheduleLinesInner {\n");
            sb.Append("  LineNumber: ").Append(LineNumber).Append("\n");
            sb.Append("  ScheduleLineDate: ").Append(ScheduleLineDate).Append("\n");
            sb.Append("  RequestedQuantity: ").Append(RequestedQuantity).Append("\n");
            sb.Append("  ConfirmedQuantity: ").Append(ConfirmedQuantity).Append("\n");
            sb.Append("  GoodsIssueDate: ").Append(GoodsIssueDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
