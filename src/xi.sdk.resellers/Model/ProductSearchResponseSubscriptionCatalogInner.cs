/*
 * XI Sdk Resellers
 *
 * For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// ProductSearchResponseSubscriptionCatalogInner
    /// </summary>
    [DataContract(Name = "ProductSearch_Response_subscriptionCatalog_inner")]
    public partial class ProductSearchResponseSubscriptionCatalogInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductSearchResponseSubscriptionCatalogInner" /> class.
        /// </summary>
        /// <param name="groupName">The name of the group. (The info will shown if searched with showGroupInfo&#x3D;true).</param>
        /// <param name="groupDescription">The description of the group. (The info will shown if searched with showGroupInfo&#x3D;true).</param>
        /// <param name="numberOfPlans">The number of plans available for the group. (The info will shown if searched with showGroupInfo&#x3D;true).</param>
        /// <param name="link">URL to access more details about the group. (The info will shown if searched with showGroupInfo&#x3D;true).</param>
        /// <param name="plans">plans.</param>
        public ProductSearchResponseSubscriptionCatalogInner(string groupName = default(string), string groupDescription = default(string), string numberOfPlans = default(string), string link = default(string), List<ProductSearchResponseSubscriptionCatalogInnerPlansInner> plans = default(List<ProductSearchResponseSubscriptionCatalogInnerPlansInner>))
        {
            this.GroupName = groupName;
            this.GroupDescription = groupDescription;
            this.NumberOfPlans = numberOfPlans;
            this.Link = link;
            this.Plans = plans;
        }

        /// <summary>
        /// The name of the group. (The info will shown if searched with showGroupInfo&#x3D;true)
        /// </summary>
        /// <value>The name of the group. (The info will shown if searched with showGroupInfo&#x3D;true)</value>
        [DataMember(Name = "groupName", EmitDefaultValue = false)]
        public string GroupName { get; set; }

        /// <summary>
        /// The description of the group. (The info will shown if searched with showGroupInfo&#x3D;true)
        /// </summary>
        /// <value>The description of the group. (The info will shown if searched with showGroupInfo&#x3D;true)</value>
        [DataMember(Name = "groupDescription", EmitDefaultValue = false)]
        public string GroupDescription { get; set; }

        /// <summary>
        /// The number of plans available for the group. (The info will shown if searched with showGroupInfo&#x3D;true)
        /// </summary>
        /// <value>The number of plans available for the group. (The info will shown if searched with showGroupInfo&#x3D;true)</value>
        [DataMember(Name = "numberOfPlans", EmitDefaultValue = false)]
        public string NumberOfPlans { get; set; }

        /// <summary>
        /// URL to access more details about the group. (The info will shown if searched with showGroupInfo&#x3D;true)
        /// </summary>
        /// <value>URL to access more details about the group. (The info will shown if searched with showGroupInfo&#x3D;true)</value>
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public string Link { get; set; }

        /// <summary>
        /// Gets or Sets Plans
        /// </summary>
        [DataMember(Name = "plans", EmitDefaultValue = false)]
        public List<ProductSearchResponseSubscriptionCatalogInnerPlansInner> Plans { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductSearchResponseSubscriptionCatalogInner {\n");
            sb.Append("  GroupName: ").Append(GroupName).Append("\n");
            sb.Append("  GroupDescription: ").Append(GroupDescription).Append("\n");
            sb.Append("  NumberOfPlans: ").Append(NumberOfPlans).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  Plans: ").Append(Plans).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
