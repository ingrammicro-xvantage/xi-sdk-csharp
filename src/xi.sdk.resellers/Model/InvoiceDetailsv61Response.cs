/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// InvoiceDetailsv61Response
    /// </summary>
    [DataContract(Name = "InvoiceDetailsv6.1Response")]
    public partial class InvoiceDetailsv61Response : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceDetailsv61Response" /> class.
        /// </summary>
        /// <param name="invoiceNumber">The Invoice number for the order..</param>
        /// <param name="invoiceStatus">Status of the invoice..</param>
        /// <param name="invoiceDate">Date of an Invoice..</param>
        /// <param name="customerOrderNumber">The reseller&#39;s order number for reference in their system..</param>
        /// <param name="endCustomerOrderNumber">The end customer&#39;s order number for reference in their system..</param>
        /// <param name="orderDate">The date and time in UTC format that the order was created..</param>
        /// <param name="billToID">Bill to party.</param>
        /// <param name="invoiceType">Type of the Invoice.</param>
        /// <param name="invoiceDueDate">Date when the invoice is due..</param>
        /// <param name="customerCountryCode">Customer country code..</param>
        /// <param name="customerNumber">Unique customer number in Ingram&#39;s system..</param>
        /// <param name="ingramOrderNumber">The IngramMicro sales order number..</param>
        /// <param name="notes">Notes for the invoice..</param>
        /// <param name="paymentTermsInfo">paymentTermsInfo.</param>
        /// <param name="billToInfo">billToInfo.</param>
        /// <param name="shipToInfo">shipToInfo.</param>
        /// <param name="lines">lines.</param>
        /// <param name="fxRateInfo">fxRateInfo.</param>
        /// <param name="summary">summary.</param>
        public InvoiceDetailsv61Response(string invoiceNumber = default(string), string invoiceStatus = default(string), DateTime invoiceDate = default(DateTime), string customerOrderNumber = default(string), string endCustomerOrderNumber = default(string), DateTime orderDate = default(DateTime), string billToID = default(string), string invoiceType = default(string), string invoiceDueDate = default(string), string customerCountryCode = default(string), string customerNumber = default(string), string ingramOrderNumber = default(string), string notes = default(string), InvoiceDetailsv61ResponsePaymentTermsInfo paymentTermsInfo = default(InvoiceDetailsv61ResponsePaymentTermsInfo), InvoiceDetailsv61ResponseBillToInfo billToInfo = default(InvoiceDetailsv61ResponseBillToInfo), InvoiceDetailsv61ResponseShipToInfo shipToInfo = default(InvoiceDetailsv61ResponseShipToInfo), List<InvoiceDetailsv61ResponseLinesInner> lines = default(List<InvoiceDetailsv61ResponseLinesInner>), InvoiceDetailsv61ResponseFxRateInfo fxRateInfo = default(InvoiceDetailsv61ResponseFxRateInfo), InvoiceDetailsv61ResponseSummary summary = default(InvoiceDetailsv61ResponseSummary))
        {
            this.InvoiceNumber = invoiceNumber;
            this.InvoiceStatus = invoiceStatus;
            this.InvoiceDate = invoiceDate;
            this.CustomerOrderNumber = customerOrderNumber;
            this.EndCustomerOrderNumber = endCustomerOrderNumber;
            this.OrderDate = orderDate;
            this.BillToID = billToID;
            this.InvoiceType = invoiceType;
            this.InvoiceDueDate = invoiceDueDate;
            this.CustomerCountryCode = customerCountryCode;
            this.CustomerNumber = customerNumber;
            this.IngramOrderNumber = ingramOrderNumber;
            this.Notes = notes;
            this.PaymentTermsInfo = paymentTermsInfo;
            this.BillToInfo = billToInfo;
            this.ShipToInfo = shipToInfo;
            this.Lines = lines;
            this.FxRateInfo = fxRateInfo;
            this.Summary = summary;
        }

        /// <summary>
        /// The Invoice number for the order.
        /// </summary>
        /// <value>The Invoice number for the order.</value>
        [DataMember(Name = "invoiceNumber", EmitDefaultValue = false)]
        public string InvoiceNumber { get; set; }

        /// <summary>
        /// Status of the invoice.
        /// </summary>
        /// <value>Status of the invoice.</value>
        [DataMember(Name = "invoiceStatus", EmitDefaultValue = false)]
        public string InvoiceStatus { get; set; }

        /// <summary>
        /// Date of an Invoice.
        /// </summary>
        /// <value>Date of an Invoice.</value>
        [DataMember(Name = "invoiceDate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime InvoiceDate { get; set; }

        /// <summary>
        /// The reseller&#39;s order number for reference in their system.
        /// </summary>
        /// <value>The reseller&#39;s order number for reference in their system.</value>
        [DataMember(Name = "customerOrderNumber", EmitDefaultValue = false)]
        public string CustomerOrderNumber { get; set; }

        /// <summary>
        /// The end customer&#39;s order number for reference in their system.
        /// </summary>
        /// <value>The end customer&#39;s order number for reference in their system.</value>
        [DataMember(Name = "endCustomerOrderNumber", EmitDefaultValue = false)]
        public string EndCustomerOrderNumber { get; set; }

        /// <summary>
        /// The date and time in UTC format that the order was created.
        /// </summary>
        /// <value>The date and time in UTC format that the order was created.</value>
        [DataMember(Name = "OrderDate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime OrderDate { get; set; }

        /// <summary>
        /// Bill to party
        /// </summary>
        /// <value>Bill to party</value>
        [DataMember(Name = "billToID", EmitDefaultValue = false)]
        public string BillToID { get; set; }

        /// <summary>
        /// Type of the Invoice
        /// </summary>
        /// <value>Type of the Invoice</value>
        [DataMember(Name = "invoiceType", EmitDefaultValue = false)]
        public string InvoiceType { get; set; }

        /// <summary>
        /// Date when the invoice is due.
        /// </summary>
        /// <value>Date when the invoice is due.</value>
        [DataMember(Name = "invoiceDueDate", EmitDefaultValue = false)]
        public string InvoiceDueDate { get; set; }

        /// <summary>
        /// Customer country code.
        /// </summary>
        /// <value>Customer country code.</value>
        [DataMember(Name = "customerCountryCode", EmitDefaultValue = false)]
        public string CustomerCountryCode { get; set; }

        /// <summary>
        /// Unique customer number in Ingram&#39;s system.
        /// </summary>
        /// <value>Unique customer number in Ingram&#39;s system.</value>
        [DataMember(Name = "customerNumber", EmitDefaultValue = false)]
        public string CustomerNumber { get; set; }

        /// <summary>
        /// The IngramMicro sales order number.
        /// </summary>
        /// <value>The IngramMicro sales order number.</value>
        [DataMember(Name = "ingramOrderNumber", EmitDefaultValue = false)]
        public string IngramOrderNumber { get; set; }

        /// <summary>
        /// Notes for the invoice.
        /// </summary>
        /// <value>Notes for the invoice.</value>
        [DataMember(Name = "notes", EmitDefaultValue = false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or Sets PaymentTermsInfo
        /// </summary>
        [DataMember(Name = "paymentTermsInfo", EmitDefaultValue = false)]
        public InvoiceDetailsv61ResponsePaymentTermsInfo PaymentTermsInfo { get; set; }

        /// <summary>
        /// Gets or Sets BillToInfo
        /// </summary>
        [DataMember(Name = "billToInfo", EmitDefaultValue = false)]
        public InvoiceDetailsv61ResponseBillToInfo BillToInfo { get; set; }

        /// <summary>
        /// Gets or Sets ShipToInfo
        /// </summary>
        [DataMember(Name = "shipToInfo", EmitDefaultValue = false)]
        public InvoiceDetailsv61ResponseShipToInfo ShipToInfo { get; set; }

        /// <summary>
        /// Gets or Sets Lines
        /// </summary>
        [DataMember(Name = "lines", EmitDefaultValue = false)]
        public List<InvoiceDetailsv61ResponseLinesInner> Lines { get; set; }

        /// <summary>
        /// Gets or Sets FxRateInfo
        /// </summary>
        [DataMember(Name = "fxRateInfo", EmitDefaultValue = false)]
        public InvoiceDetailsv61ResponseFxRateInfo FxRateInfo { get; set; }

        /// <summary>
        /// Gets or Sets Summary
        /// </summary>
        [DataMember(Name = "summary", EmitDefaultValue = false)]
        public InvoiceDetailsv61ResponseSummary Summary { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InvoiceDetailsv61Response {\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  InvoiceStatus: ").Append(InvoiceStatus).Append("\n");
            sb.Append("  InvoiceDate: ").Append(InvoiceDate).Append("\n");
            sb.Append("  CustomerOrderNumber: ").Append(CustomerOrderNumber).Append("\n");
            sb.Append("  EndCustomerOrderNumber: ").Append(EndCustomerOrderNumber).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  BillToID: ").Append(BillToID).Append("\n");
            sb.Append("  InvoiceType: ").Append(InvoiceType).Append("\n");
            sb.Append("  InvoiceDueDate: ").Append(InvoiceDueDate).Append("\n");
            sb.Append("  CustomerCountryCode: ").Append(CustomerCountryCode).Append("\n");
            sb.Append("  CustomerNumber: ").Append(CustomerNumber).Append("\n");
            sb.Append("  IngramOrderNumber: ").Append(IngramOrderNumber).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  PaymentTermsInfo: ").Append(PaymentTermsInfo).Append("\n");
            sb.Append("  BillToInfo: ").Append(BillToInfo).Append("\n");
            sb.Append("  ShipToInfo: ").Append(ShipToInfo).Append("\n");
            sb.Append("  Lines: ").Append(Lines).Append("\n");
            sb.Append("  FxRateInfo: ").Append(FxRateInfo).Append("\n");
            sb.Append("  Summary: ").Append(Summary).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
