/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderSearchRequestServicerequest
    /// </summary>
    [DataContract(Name = "orderSearchRequest_servicerequest")]
    public partial class OrderSearchRequestServicerequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSearchRequestServicerequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderSearchRequestServicerequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSearchRequestServicerequest" /> class.
        /// </summary>
        /// <param name="requestpreamble">requestpreamble (required).</param>
        /// <param name="orderLookupRequest">orderLookupRequest.</param>
        public OrderSearchRequestServicerequest(OrderSearchRequestServicerequestRequestpreamble requestpreamble = default(OrderSearchRequestServicerequestRequestpreamble), OrderSearchRequestServicerequestOrderLookupRequest orderLookupRequest = default(OrderSearchRequestServicerequestOrderLookupRequest))
        {
            // to ensure "requestpreamble" is required (not null)
            if (requestpreamble == null)
            {
                throw new ArgumentNullException("requestpreamble is a required property for OrderSearchRequestServicerequest and cannot be null");
            }
            this.Requestpreamble = requestpreamble;
            this.OrderLookupRequest = orderLookupRequest;
        }

        /// <summary>
        /// Gets or Sets Requestpreamble
        /// </summary>
        [DataMember(Name = "requestpreamble", IsRequired = true, EmitDefaultValue = true)]
        public OrderSearchRequestServicerequestRequestpreamble Requestpreamble { get; set; }

        /// <summary>
        /// Gets or Sets OrderLookupRequest
        /// </summary>
        [DataMember(Name = "orderLookupRequest", EmitDefaultValue = false)]
        public OrderSearchRequestServicerequestOrderLookupRequest OrderLookupRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderSearchRequestServicerequest {\n");
            sb.Append("  Requestpreamble: ").Append(Requestpreamble).Append("\n");
            sb.Append("  OrderLookupRequest: ").Append(OrderLookupRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
