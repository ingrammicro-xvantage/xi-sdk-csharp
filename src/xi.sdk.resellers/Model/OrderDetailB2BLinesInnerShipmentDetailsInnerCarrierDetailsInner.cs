/*
 * XI Sdk Resellers
 *
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInner
    /// </summary>
    [DataContract(Name = "OrderDetailB2B_lines_inner_shipmentDetails_inner_carrierDetails_inner")]
    public partial class OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInner" /> class.
        /// </summary>
        /// <param name="carrierCode">The carrier code for the shipment containing the line item..</param>
        /// <param name="carrierName">The name of the carrier of the shipment containing the line item..</param>
        /// <param name="quantity">The quantity shipped of the line item..</param>
        /// <param name="shippedDate">The actual date when line item shipped..</param>
        /// <param name="estimatedDeliveryDate">The date the line item is expected to be delivered..</param>
        /// <param name="deliveredDate">The actual date of delivery of the line item..</param>
        /// <param name="carrierPickupDate">The actual date when carrier picked up line item..</param>
        /// <param name="trackingDetails">The tracking details for the shipment containing the line item..</param>
        public OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInner(string carrierCode = default(string), string carrierName = default(string), int quantity = default(int), string shippedDate = default(string), string estimatedDeliveryDate = default(string), string deliveredDate = default(string), string carrierPickupDate = default(string), List<OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInnerTrackingDetailsInner> trackingDetails = default(List<OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInnerTrackingDetailsInner>))
        {
            this.CarrierCode = carrierCode;
            this.CarrierName = carrierName;
            this.Quantity = quantity;
            this.ShippedDate = shippedDate;
            this.EstimatedDeliveryDate = estimatedDeliveryDate;
            this.DeliveredDate = deliveredDate;
            this.CarrierPickupDate = carrierPickupDate;
            this.TrackingDetails = trackingDetails;
        }

        /// <summary>
        /// The carrier code for the shipment containing the line item.
        /// </summary>
        /// <value>The carrier code for the shipment containing the line item.</value>
        [DataMember(Name = "carrierCode", EmitDefaultValue = false)]
        public string CarrierCode { get; set; }

        /// <summary>
        /// The name of the carrier of the shipment containing the line item.
        /// </summary>
        /// <value>The name of the carrier of the shipment containing the line item.</value>
        [DataMember(Name = "carrierName", EmitDefaultValue = false)]
        public string CarrierName { get; set; }

        /// <summary>
        /// The quantity shipped of the line item.
        /// </summary>
        /// <value>The quantity shipped of the line item.</value>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public int Quantity { get; set; }

        /// <summary>
        /// The actual date when line item shipped.
        /// </summary>
        /// <value>The actual date when line item shipped.</value>
        [DataMember(Name = "shippedDate", EmitDefaultValue = false)]
        public string ShippedDate { get; set; }

        /// <summary>
        /// The date the line item is expected to be delivered.
        /// </summary>
        /// <value>The date the line item is expected to be delivered.</value>
        [DataMember(Name = "estimatedDeliveryDate", EmitDefaultValue = false)]
        public string EstimatedDeliveryDate { get; set; }

        /// <summary>
        /// The actual date of delivery of the line item.
        /// </summary>
        /// <value>The actual date of delivery of the line item.</value>
        [DataMember(Name = "deliveredDate", EmitDefaultValue = false)]
        public string DeliveredDate { get; set; }

        /// <summary>
        /// The actual date when carrier picked up line item.
        /// </summary>
        /// <value>The actual date when carrier picked up line item.</value>
        [DataMember(Name = "carrierPickupDate", EmitDefaultValue = false)]
        public string CarrierPickupDate { get; set; }

        /// <summary>
        /// The tracking details for the shipment containing the line item.
        /// </summary>
        /// <value>The tracking details for the shipment containing the line item.</value>
        [DataMember(Name = "trackingDetails", EmitDefaultValue = true)]
        public List<OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInnerTrackingDetailsInner> TrackingDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailB2BLinesInnerShipmentDetailsInnerCarrierDetailsInner {\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  CarrierName: ").Append(CarrierName).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("  DeliveredDate: ").Append(DeliveredDate).Append("\n");
            sb.Append("  CarrierPickupDate: ").Append(CarrierPickupDate).Append("\n");
            sb.Append("  TrackingDetails: ").Append(TrackingDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
