/*
 * XI Sdk Resellers
 *
 * For Ingram Micro Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// ReturnsDetailsResponseProductsInner
    /// </summary>
    [DataContract(Name = "returnsDetailsResponse_products_inner")]
    public partial class ReturnsDetailsResponseProductsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReturnsDetailsResponseProductsInner" /> class.
        /// </summary>
        /// <param name="ingramLineNumber">Unique Ingram Micro line number..</param>
        /// <param name="description">The description of the line item product..</param>
        /// <param name="ingramPartNumber">Unique IngramMicro part number..</param>
        /// <param name="vendorPartNumber">The vendor&#39;s part number for the line item..</param>
        /// <param name="upc">The UPC code of a product..</param>
        /// <param name="invoiceDate">The date of the invoice..</param>
        /// <param name="invoiceNumber">Ingram micro Invoice number..</param>
        /// <param name="customerOrderNumber">The reseller&#39;s order number for reference in their system..</param>
        /// <param name="quantity">The quantity of the line item..</param>
        /// <param name="unitPrice">The unit price of the line item..</param>
        /// <param name="extendedPrice">Unit price X quantity for the line item..</param>
        /// <param name="status">The status of the line item..</param>
        /// <param name="returnBranch">The code of the return branch..</param>
        /// <param name="shipFromBranch">The code of the ship from branch..</param>
        /// <param name="requestDetails">Request details..</param>
        /// <param name="additionalDetails">additionalDetails.</param>
        public ReturnsDetailsResponseProductsInner(int ingramLineNumber = default(int), string description = default(string), string ingramPartNumber = default(string), string vendorPartNumber = default(string), string upc = default(string), string invoiceDate = default(string), string invoiceNumber = default(string), string customerOrderNumber = default(string), decimal quantity = default(decimal), decimal unitPrice = default(decimal), decimal extendedPrice = default(decimal), string status = default(string), string returnBranch = default(string), string shipFromBranch = default(string), string requestDetails = default(string), string additionalDetails = default(string))
        {
            this.IngramLineNumber = ingramLineNumber;
            this.Description = description;
            this.IngramPartNumber = ingramPartNumber;
            this.VendorPartNumber = vendorPartNumber;
            this.Upc = upc;
            this.InvoiceDate = invoiceDate;
            this.InvoiceNumber = invoiceNumber;
            this.CustomerOrderNumber = customerOrderNumber;
            this.Quantity = quantity;
            this.UnitPrice = unitPrice;
            this.ExtendedPrice = extendedPrice;
            this.Status = status;
            this.ReturnBranch = returnBranch;
            this.ShipFromBranch = shipFromBranch;
            this.RequestDetails = requestDetails;
            this.AdditionalDetails = additionalDetails;
        }

        /// <summary>
        /// Unique Ingram Micro line number.
        /// </summary>
        /// <value>Unique Ingram Micro line number.</value>
        [DataMember(Name = "ingramLineNumber", EmitDefaultValue = false)]
        public int IngramLineNumber { get; set; }

        /// <summary>
        /// The description of the line item product.
        /// </summary>
        /// <value>The description of the line item product.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Unique IngramMicro part number.
        /// </summary>
        /// <value>Unique IngramMicro part number.</value>
        [DataMember(Name = "ingramPartNumber", EmitDefaultValue = false)]
        public string IngramPartNumber { get; set; }

        /// <summary>
        /// The vendor&#39;s part number for the line item.
        /// </summary>
        /// <value>The vendor&#39;s part number for the line item.</value>
        [DataMember(Name = "vendorPartNumber", EmitDefaultValue = false)]
        public string VendorPartNumber { get; set; }

        /// <summary>
        /// The UPC code of a product.
        /// </summary>
        /// <value>The UPC code of a product.</value>
        [DataMember(Name = "upc", EmitDefaultValue = false)]
        public string Upc { get; set; }

        /// <summary>
        /// The date of the invoice.
        /// </summary>
        /// <value>The date of the invoice.</value>
        [DataMember(Name = "invoiceDate", EmitDefaultValue = false)]
        public string InvoiceDate { get; set; }

        /// <summary>
        /// Ingram micro Invoice number.
        /// </summary>
        /// <value>Ingram micro Invoice number.</value>
        [DataMember(Name = "invoiceNumber", EmitDefaultValue = false)]
        public string InvoiceNumber { get; set; }

        /// <summary>
        /// The reseller&#39;s order number for reference in their system.
        /// </summary>
        /// <value>The reseller&#39;s order number for reference in their system.</value>
        [DataMember(Name = "customerOrderNumber", EmitDefaultValue = false)]
        public string CustomerOrderNumber { get; set; }

        /// <summary>
        /// The quantity of the line item.
        /// </summary>
        /// <value>The quantity of the line item.</value>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public decimal Quantity { get; set; }

        /// <summary>
        /// The unit price of the line item.
        /// </summary>
        /// <value>The unit price of the line item.</value>
        [DataMember(Name = "unitPrice", EmitDefaultValue = false)]
        public decimal UnitPrice { get; set; }

        /// <summary>
        /// Unit price X quantity for the line item.
        /// </summary>
        /// <value>Unit price X quantity for the line item.</value>
        [DataMember(Name = "extendedPrice", EmitDefaultValue = false)]
        public decimal ExtendedPrice { get; set; }

        /// <summary>
        /// The status of the line item.
        /// </summary>
        /// <value>The status of the line item.</value>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// The code of the return branch.
        /// </summary>
        /// <value>The code of the return branch.</value>
        [DataMember(Name = "returnBranch", EmitDefaultValue = false)]
        public string ReturnBranch { get; set; }

        /// <summary>
        /// The code of the ship from branch.
        /// </summary>
        /// <value>The code of the ship from branch.</value>
        [DataMember(Name = "shipFromBranch", EmitDefaultValue = false)]
        public string ShipFromBranch { get; set; }

        /// <summary>
        /// Request details.
        /// </summary>
        /// <value>Request details.</value>
        [DataMember(Name = "requestDetails", EmitDefaultValue = false)]
        public string RequestDetails { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalDetails
        /// </summary>
        [DataMember(Name = "additionalDetails", EmitDefaultValue = false)]
        public string AdditionalDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReturnsDetailsResponseProductsInner {\n");
            sb.Append("  IngramLineNumber: ").Append(IngramLineNumber).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  IngramPartNumber: ").Append(IngramPartNumber).Append("\n");
            sb.Append("  VendorPartNumber: ").Append(VendorPartNumber).Append("\n");
            sb.Append("  Upc: ").Append(Upc).Append("\n");
            sb.Append("  InvoiceDate: ").Append(InvoiceDate).Append("\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  CustomerOrderNumber: ").Append(CustomerOrderNumber).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  UnitPrice: ").Append(UnitPrice).Append("\n");
            sb.Append("  ExtendedPrice: ").Append(ExtendedPrice).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  ReturnBranch: ").Append(ReturnBranch).Append("\n");
            sb.Append("  ShipFromBranch: ").Append(ShipFromBranch).Append("\n");
            sb.Append("  RequestDetails: ").Append(RequestDetails).Append("\n");
            sb.Append("  AdditionalDetails: ").Append(AdditionalDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
