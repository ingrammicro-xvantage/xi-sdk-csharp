/*
 * Reseller API
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = xi.sdk.resellers.Client.FileParameter;
using OpenAPIDateConverter = xi.sdk.resellers.Client.OpenAPIDateConverter;

namespace xi.sdk.resellers.Model
{
    /// <summary>
    /// InvoiceDetailResponseServiceresponseInvoicedetailresponse
    /// </summary>
    [DataContract(Name = "invoiceDetailResponse_serviceresponse_invoicedetailresponse")]
    public partial class InvoiceDetailResponseServiceresponseInvoicedetailresponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InvoiceDetailResponseServiceresponseInvoicedetailresponse" /> class.
        /// </summary>
        /// <param name="customernumber">customernumber.</param>
        /// <param name="invoicenumber">invoicenumber.</param>
        /// <param name="invoicedate">invoicedate.</param>
        /// <param name="invoicetype">invoicetype.</param>
        /// <param name="customerordernumber">customerordernumber.</param>
        /// <param name="customerfreightamount">customerfreightamount.</param>
        /// <param name="customerforeignfrightamt">customerforeignfrightamt.</param>
        /// <param name="totaltaxamount">totaltaxamount.</param>
        /// <param name="totalamount">totalamount.</param>
        /// <param name="shiptosuffix">shiptosuffix.</param>
        /// <param name="billtosuffix">billtosuffix.</param>
        /// <param name="freightamount">freightamount.</param>
        /// <param name="paymentterms">paymentterms.</param>
        /// <param name="orderdate">orderdate.</param>
        /// <param name="carrier">carrier.</param>
        /// <param name="carrierdescription">carrierdescription.</param>
        /// <param name="discountamount">discountamount.</param>
        /// <param name="taxtype">taxtype.</param>
        /// <param name="enduserponumber">enduserponumber.</param>
        /// <param name="freightforwardercode">freightforwardercode.</param>
        /// <param name="creditmemoreasoncode">creditmemoreasoncode.</param>
        public InvoiceDetailResponseServiceresponseInvoicedetailresponse(string customernumber = default(string), string invoicenumber = default(string), DateTime invoicedate = default(DateTime), string invoicetype = default(string), string customerordernumber = default(string), double customerfreightamount = default(double), float customerforeignfrightamt = default(float), double totaltaxamount = default(double), double totalamount = default(double), string shiptosuffix = default(string), string billtosuffix = default(string), double freightamount = default(double), string paymentterms = default(string), string orderdate = default(string), string carrier = default(string), string carrierdescription = default(string), double discountamount = default(double), string taxtype = default(string), string enduserponumber = default(string), string freightforwardercode = default(string), string creditmemoreasoncode = default(string))
        {
            this.Customernumber = customernumber;
            this.Invoicenumber = invoicenumber;
            this.Invoicedate = invoicedate;
            this.Invoicetype = invoicetype;
            this.Customerordernumber = customerordernumber;
            this.Customerfreightamount = customerfreightamount;
            this.Customerforeignfrightamt = customerforeignfrightamt;
            this.Totaltaxamount = totaltaxamount;
            this.Totalamount = totalamount;
            this.Shiptosuffix = shiptosuffix;
            this.Billtosuffix = billtosuffix;
            this.Freightamount = freightamount;
            this.Paymentterms = paymentterms;
            this.Orderdate = orderdate;
            this.Carrier = carrier;
            this.Carrierdescription = carrierdescription;
            this.Discountamount = discountamount;
            this.Taxtype = taxtype;
            this.Enduserponumber = enduserponumber;
            this.Freightforwardercode = freightforwardercode;
            this.Creditmemoreasoncode = creditmemoreasoncode;
        }

        /// <summary>
        /// Gets or Sets Customernumber
        /// </summary>
        [DataMember(Name = "customernumber", EmitDefaultValue = false)]
        public string Customernumber { get; set; }

        /// <summary>
        /// Gets or Sets Invoicenumber
        /// </summary>
        [DataMember(Name = "invoicenumber", EmitDefaultValue = false)]
        public string Invoicenumber { get; set; }

        /// <summary>
        /// Gets or Sets Invoicedate
        /// </summary>
        [DataMember(Name = "invoicedate", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime Invoicedate { get; set; }

        /// <summary>
        /// Gets or Sets Invoicetype
        /// </summary>
        [DataMember(Name = "invoicetype", EmitDefaultValue = false)]
        public string Invoicetype { get; set; }

        /// <summary>
        /// Gets or Sets Customerordernumber
        /// </summary>
        [DataMember(Name = "customerordernumber", EmitDefaultValue = false)]
        public string Customerordernumber { get; set; }

        /// <summary>
        /// Gets or Sets Customerfreightamount
        /// </summary>
        [DataMember(Name = "customerfreightamount", EmitDefaultValue = false)]
        public double Customerfreightamount { get; set; }

        /// <summary>
        /// Gets or Sets Customerforeignfrightamt
        /// </summary>
        [DataMember(Name = "customerforeignfrightamt", EmitDefaultValue = false)]
        public float Customerforeignfrightamt { get; set; }

        /// <summary>
        /// Gets or Sets Totaltaxamount
        /// </summary>
        [DataMember(Name = "totaltaxamount", EmitDefaultValue = false)]
        public double Totaltaxamount { get; set; }

        /// <summary>
        /// Gets or Sets Totalamount
        /// </summary>
        [DataMember(Name = "totalamount", EmitDefaultValue = false)]
        public double Totalamount { get; set; }

        /// <summary>
        /// Gets or Sets Shiptosuffix
        /// </summary>
        [DataMember(Name = "shiptosuffix", EmitDefaultValue = false)]
        public string Shiptosuffix { get; set; }

        /// <summary>
        /// Gets or Sets Billtosuffix
        /// </summary>
        [DataMember(Name = "billtosuffix", EmitDefaultValue = false)]
        public string Billtosuffix { get; set; }

        /// <summary>
        /// Gets or Sets Freightamount
        /// </summary>
        [DataMember(Name = "freightamount", EmitDefaultValue = false)]
        public double Freightamount { get; set; }

        /// <summary>
        /// Gets or Sets Paymentterms
        /// </summary>
        [DataMember(Name = "paymentterms", EmitDefaultValue = false)]
        public string Paymentterms { get; set; }

        /// <summary>
        /// Gets or Sets Orderdate
        /// </summary>
        [DataMember(Name = "orderdate", EmitDefaultValue = false)]
        public string Orderdate { get; set; }

        /// <summary>
        /// Gets or Sets Carrier
        /// </summary>
        [DataMember(Name = "carrier", EmitDefaultValue = false)]
        public string Carrier { get; set; }

        /// <summary>
        /// Gets or Sets Carrierdescription
        /// </summary>
        [DataMember(Name = "carrierdescription", EmitDefaultValue = false)]
        public string Carrierdescription { get; set; }

        /// <summary>
        /// Gets or Sets Discountamount
        /// </summary>
        [DataMember(Name = "discountamount", EmitDefaultValue = false)]
        public double Discountamount { get; set; }

        /// <summary>
        /// Gets or Sets Taxtype
        /// </summary>
        [DataMember(Name = "taxtype", EmitDefaultValue = false)]
        public string Taxtype { get; set; }

        /// <summary>
        /// Gets or Sets Enduserponumber
        /// </summary>
        [DataMember(Name = "enduserponumber", EmitDefaultValue = false)]
        public string Enduserponumber { get; set; }

        /// <summary>
        /// Gets or Sets Freightforwardercode
        /// </summary>
        [DataMember(Name = "freightforwardercode", EmitDefaultValue = false)]
        public string Freightforwardercode { get; set; }

        /// <summary>
        /// Gets or Sets Creditmemoreasoncode
        /// </summary>
        [DataMember(Name = "creditmemoreasoncode", EmitDefaultValue = false)]
        public string Creditmemoreasoncode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InvoiceDetailResponseServiceresponseInvoicedetailresponse {\n");
            sb.Append("  Customernumber: ").Append(Customernumber).Append("\n");
            sb.Append("  Invoicenumber: ").Append(Invoicenumber).Append("\n");
            sb.Append("  Invoicedate: ").Append(Invoicedate).Append("\n");
            sb.Append("  Invoicetype: ").Append(Invoicetype).Append("\n");
            sb.Append("  Customerordernumber: ").Append(Customerordernumber).Append("\n");
            sb.Append("  Customerfreightamount: ").Append(Customerfreightamount).Append("\n");
            sb.Append("  Customerforeignfrightamt: ").Append(Customerforeignfrightamt).Append("\n");
            sb.Append("  Totaltaxamount: ").Append(Totaltaxamount).Append("\n");
            sb.Append("  Totalamount: ").Append(Totalamount).Append("\n");
            sb.Append("  Shiptosuffix: ").Append(Shiptosuffix).Append("\n");
            sb.Append("  Billtosuffix: ").Append(Billtosuffix).Append("\n");
            sb.Append("  Freightamount: ").Append(Freightamount).Append("\n");
            sb.Append("  Paymentterms: ").Append(Paymentterms).Append("\n");
            sb.Append("  Orderdate: ").Append(Orderdate).Append("\n");
            sb.Append("  Carrier: ").Append(Carrier).Append("\n");
            sb.Append("  Carrierdescription: ").Append(Carrierdescription).Append("\n");
            sb.Append("  Discountamount: ").Append(Discountamount).Append("\n");
            sb.Append("  Taxtype: ").Append(Taxtype).Append("\n");
            sb.Append("  Enduserponumber: ").Append(Enduserponumber).Append("\n");
            sb.Append("  Freightforwardercode: ").Append(Freightforwardercode).Append("\n");
            sb.Append("  Creditmemoreasoncode: ").Append(Creditmemoreasoncode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
