/*
 * Reseller API Documentation - United States
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-csharp.Model
{
    /// <summary>
    /// OrderDetailResponseServiceresponseOrderdetailresponse
    /// </summary>
    [DataContract(Name = "orderDetailResponse_serviceresponse_orderdetailresponse")]
    public partial class OrderDetailResponseServiceresponseOrderdetailresponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailResponseServiceresponseOrderdetailresponse" /> class.
        /// </summary>
        /// <param name="ordernumber">ordernumber.</param>
        /// <param name="ordertype">Order Type   B - BRANCH TRANSFER C - CASH ORDER D - DIRECT ORDER F - FUTURE ORDER P - SPECIAL ORDER Q - QUOTE ORDER S - STOCK ORDER M - MEMO ORDER.</param>
        /// <param name="customerordernumber">Customer PO number.</param>
        /// <param name="enduserponumber">End User PO number.</param>
        /// <param name="orderstatus">Status of order within Ingram system S - SALES HOLD H - TAG HOLD I - INVOICED P - PENDING E - BILLING ERROR F - FORCE BILLING V - VOIDED T - TRANSFERRED D - HOLD SHIPMENT R - RELEASED O - IM ONLINE HOLD U - BILL FOR HISTORY ONLY W - ORDER NOT PRINTED A - DROP SHIP HOLD B - INTERNET CUST ORIG HOLD 1 - PICKED 2 - INSPECTED 3 - PACKED 4 - SHIPPED C - CREDIT HOLD 9 - CISCO 3A6 Q - RMA HOLD G - CREDIT HOLD N - CREDIT HOLD.</param>
        /// <param name="entrytimestamp">Time stamp of the order placed.</param>
        /// <param name="entrymethoddescription">Description of the entry method .</param>
        /// <param name="ordertotalvalue">Total order value.</param>
        /// <param name="ordersubtotal">Subtotal order value.</param>
        /// <param name="freightamount">Freight charges.</param>
        /// <param name="currencycode">Country specific currency code.</param>
        /// <param name="totalweight">Total order weight. unit - - North america - Pounds , other countries will be KG.</param>
        /// <param name="totaltax">total tax on the orders placed.</param>
        /// <param name="billtoaddress">billtoaddress.</param>
        /// <param name="shiptoaddress">shiptoaddress.</param>
        /// <param name="enduserinfo">enduserinfo.</param>
        /// <param name="lines">lines.</param>
        /// <param name="commentlines">commentlines.</param>
        /// <param name="miscfeeline">miscfeeline.</param>
        /// <param name="extendedspecs">extendedspecs.</param>
        public OrderDetailResponseServiceresponseOrderdetailresponse(string ordernumber = default(string), string ordertype = default(string), string customerordernumber = default(string), string enduserponumber = default(string), string orderstatus = default(string), string entrytimestamp = default(string), string entrymethoddescription = default(string), decimal ordertotalvalue = default(decimal), decimal ordersubtotal = default(decimal), string freightamount = default(string), string currencycode = default(string), string totalweight = default(string), string totaltax = default(string), OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress billtoaddress = default(OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress), OrderDetailResponseServiceresponseOrderdetailresponseShiptoaddress shiptoaddress = default(OrderDetailResponseServiceresponseOrderdetailresponseShiptoaddress), OrderDetailResponseServiceresponseOrderdetailresponseEnduserinfo enduserinfo = default(OrderDetailResponseServiceresponseOrderdetailresponseEnduserinfo), List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInner> lines = default(List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInner>), List<OrderDetailResponseServiceresponseOrderdetailresponseCommentlinesInner> commentlines = default(List<OrderDetailResponseServiceresponseOrderdetailresponseCommentlinesInner>), List<OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner> miscfeeline = default(List<OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner>), List<OrderDetailResponseServiceresponseOrderdetailresponseExtendedspecsInner> extendedspecs = default(List<OrderDetailResponseServiceresponseOrderdetailresponseExtendedspecsInner>))
        {
            this.Ordernumber = ordernumber;
            this.Ordertype = ordertype;
            this.Customerordernumber = customerordernumber;
            this.Enduserponumber = enduserponumber;
            this.Orderstatus = orderstatus;
            this.Entrytimestamp = entrytimestamp;
            this.Entrymethoddescription = entrymethoddescription;
            this.Ordertotalvalue = ordertotalvalue;
            this.Ordersubtotal = ordersubtotal;
            this.Freightamount = freightamount;
            this.Currencycode = currencycode;
            this.Totalweight = totalweight;
            this.Totaltax = totaltax;
            this.Billtoaddress = billtoaddress;
            this.Shiptoaddress = shiptoaddress;
            this.Enduserinfo = enduserinfo;
            this.Lines = lines;
            this.Commentlines = commentlines;
            this.Miscfeeline = miscfeeline;
            this.Extendedspecs = extendedspecs;
        }

        /// <summary>
        /// Gets or Sets Ordernumber
        /// </summary>
        [DataMember(Name = "ordernumber", EmitDefaultValue = false)]
        public string Ordernumber { get; set; }

        /// <summary>
        /// Order Type   B - BRANCH TRANSFER C - CASH ORDER D - DIRECT ORDER F - FUTURE ORDER P - SPECIAL ORDER Q - QUOTE ORDER S - STOCK ORDER M - MEMO ORDER
        /// </summary>
        /// <value>Order Type   B - BRANCH TRANSFER C - CASH ORDER D - DIRECT ORDER F - FUTURE ORDER P - SPECIAL ORDER Q - QUOTE ORDER S - STOCK ORDER M - MEMO ORDER</value>
        [DataMember(Name = "ordertype", EmitDefaultValue = false)]
        public string Ordertype { get; set; }

        /// <summary>
        /// Customer PO number
        /// </summary>
        /// <value>Customer PO number</value>
        [DataMember(Name = "customerordernumber", EmitDefaultValue = false)]
        public string Customerordernumber { get; set; }

        /// <summary>
        /// End User PO number
        /// </summary>
        /// <value>End User PO number</value>
        [DataMember(Name = "enduserponumber", EmitDefaultValue = false)]
        public string Enduserponumber { get; set; }

        /// <summary>
        /// Status of order within Ingram system S - SALES HOLD H - TAG HOLD I - INVOICED P - PENDING E - BILLING ERROR F - FORCE BILLING V - VOIDED T - TRANSFERRED D - HOLD SHIPMENT R - RELEASED O - IM ONLINE HOLD U - BILL FOR HISTORY ONLY W - ORDER NOT PRINTED A - DROP SHIP HOLD B - INTERNET CUST ORIG HOLD 1 - PICKED 2 - INSPECTED 3 - PACKED 4 - SHIPPED C - CREDIT HOLD 9 - CISCO 3A6 Q - RMA HOLD G - CREDIT HOLD N - CREDIT HOLD
        /// </summary>
        /// <value>Status of order within Ingram system S - SALES HOLD H - TAG HOLD I - INVOICED P - PENDING E - BILLING ERROR F - FORCE BILLING V - VOIDED T - TRANSFERRED D - HOLD SHIPMENT R - RELEASED O - IM ONLINE HOLD U - BILL FOR HISTORY ONLY W - ORDER NOT PRINTED A - DROP SHIP HOLD B - INTERNET CUST ORIG HOLD 1 - PICKED 2 - INSPECTED 3 - PACKED 4 - SHIPPED C - CREDIT HOLD 9 - CISCO 3A6 Q - RMA HOLD G - CREDIT HOLD N - CREDIT HOLD</value>
        [DataMember(Name = "orderstatus", EmitDefaultValue = false)]
        public string Orderstatus { get; set; }

        /// <summary>
        /// Time stamp of the order placed
        /// </summary>
        /// <value>Time stamp of the order placed</value>
        [DataMember(Name = "entrytimestamp", EmitDefaultValue = false)]
        public string Entrytimestamp { get; set; }

        /// <summary>
        /// Description of the entry method 
        /// </summary>
        /// <value>Description of the entry method </value>
        [DataMember(Name = "entrymethoddescription", EmitDefaultValue = false)]
        public string Entrymethoddescription { get; set; }

        /// <summary>
        /// Total order value
        /// </summary>
        /// <value>Total order value</value>
        [DataMember(Name = "ordertotalvalue", EmitDefaultValue = false)]
        public decimal Ordertotalvalue { get; set; }

        /// <summary>
        /// Subtotal order value
        /// </summary>
        /// <value>Subtotal order value</value>
        [DataMember(Name = "ordersubtotal", EmitDefaultValue = false)]
        public decimal Ordersubtotal { get; set; }

        /// <summary>
        /// Freight charges
        /// </summary>
        /// <value>Freight charges</value>
        [DataMember(Name = "freightamount", EmitDefaultValue = false)]
        public string Freightamount { get; set; }

        /// <summary>
        /// Country specific currency code
        /// </summary>
        /// <value>Country specific currency code</value>
        [DataMember(Name = "currencycode", EmitDefaultValue = false)]
        public string Currencycode { get; set; }

        /// <summary>
        /// Total order weight. unit - - North america - Pounds , other countries will be KG
        /// </summary>
        /// <value>Total order weight. unit - - North america - Pounds , other countries will be KG</value>
        [DataMember(Name = "totalweight", EmitDefaultValue = false)]
        public string Totalweight { get; set; }

        /// <summary>
        /// total tax on the orders placed
        /// </summary>
        /// <value>total tax on the orders placed</value>
        [DataMember(Name = "totaltax", EmitDefaultValue = false)]
        public string Totaltax { get; set; }

        /// <summary>
        /// Gets or Sets Billtoaddress
        /// </summary>
        [DataMember(Name = "billtoaddress", EmitDefaultValue = false)]
        public OrderDetailResponseServiceresponseOrderdetailresponseBilltoaddress Billtoaddress { get; set; }

        /// <summary>
        /// Gets or Sets Shiptoaddress
        /// </summary>
        [DataMember(Name = "shiptoaddress", EmitDefaultValue = false)]
        public OrderDetailResponseServiceresponseOrderdetailresponseShiptoaddress Shiptoaddress { get; set; }

        /// <summary>
        /// Gets or Sets Enduserinfo
        /// </summary>
        [DataMember(Name = "enduserinfo", EmitDefaultValue = false)]
        public OrderDetailResponseServiceresponseOrderdetailresponseEnduserinfo Enduserinfo { get; set; }

        /// <summary>
        /// Gets or Sets Lines
        /// </summary>
        [DataMember(Name = "lines", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseLinesInner> Lines { get; set; }

        /// <summary>
        /// Gets or Sets Commentlines
        /// </summary>
        [DataMember(Name = "commentlines", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseCommentlinesInner> Commentlines { get; set; }

        /// <summary>
        /// Gets or Sets Miscfeeline
        /// </summary>
        [DataMember(Name = "miscfeeline", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseMiscfeelineInner> Miscfeeline { get; set; }

        /// <summary>
        /// Gets or Sets Extendedspecs
        /// </summary>
        [DataMember(Name = "extendedspecs", EmitDefaultValue = false)]
        public List<OrderDetailResponseServiceresponseOrderdetailresponseExtendedspecsInner> Extendedspecs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailResponseServiceresponseOrderdetailresponse {\n");
            sb.Append("  Ordernumber: ").Append(Ordernumber).Append("\n");
            sb.Append("  Ordertype: ").Append(Ordertype).Append("\n");
            sb.Append("  Customerordernumber: ").Append(Customerordernumber).Append("\n");
            sb.Append("  Enduserponumber: ").Append(Enduserponumber).Append("\n");
            sb.Append("  Orderstatus: ").Append(Orderstatus).Append("\n");
            sb.Append("  Entrytimestamp: ").Append(Entrytimestamp).Append("\n");
            sb.Append("  Entrymethoddescription: ").Append(Entrymethoddescription).Append("\n");
            sb.Append("  Ordertotalvalue: ").Append(Ordertotalvalue).Append("\n");
            sb.Append("  Ordersubtotal: ").Append(Ordersubtotal).Append("\n");
            sb.Append("  Freightamount: ").Append(Freightamount).Append("\n");
            sb.Append("  Currencycode: ").Append(Currencycode).Append("\n");
            sb.Append("  Totalweight: ").Append(Totalweight).Append("\n");
            sb.Append("  Totaltax: ").Append(Totaltax).Append("\n");
            sb.Append("  Billtoaddress: ").Append(Billtoaddress).Append("\n");
            sb.Append("  Shiptoaddress: ").Append(Shiptoaddress).Append("\n");
            sb.Append("  Enduserinfo: ").Append(Enduserinfo).Append("\n");
            sb.Append("  Lines: ").Append(Lines).Append("\n");
            sb.Append("  Commentlines: ").Append(Commentlines).Append("\n");
            sb.Append("  Miscfeeline: ").Append(Miscfeeline).Append("\n");
            sb.Append("  Extendedspecs: ").Append(Extendedspecs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
