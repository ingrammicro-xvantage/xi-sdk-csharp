/*
 * Reseller API Documentation - United States
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-csharp.Model
{
    /// <summary>
    /// ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner
    /// </summary>
    [DataContract(Name = "productSearchResponse_serviceresponse_productsearchresponse_inner_partnumbers_inner")]
    public partial class ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner" /> class.
        /// </summary>
        /// <param name="ingrampartnumber">Ingram Part Number.</param>
        /// <param name="manufacturerpartnumber">Vendor or Manufacturer Part Number.</param>
        /// <param name="upccode">UPC.</param>
        /// <param name="productdescription">Product description.</param>
        /// <param name="currency">currency.</param>
        /// <param name="haswarranty">haswarranty.</param>
        public ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner(string ingrampartnumber = default(string), string manufacturerpartnumber = default(string), string upccode = default(string), string productdescription = default(string), string currency = default(string), string haswarranty = default(string))
        {
            this.Ingrampartnumber = ingrampartnumber;
            this.Manufacturerpartnumber = manufacturerpartnumber;
            this.Upccode = upccode;
            this.Productdescription = productdescription;
            this.Currency = currency;
            this.Haswarranty = haswarranty;
        }

        /// <summary>
        /// Ingram Part Number
        /// </summary>
        /// <value>Ingram Part Number</value>
        [DataMember(Name = "ingrampartnumber", EmitDefaultValue = false)]
        public string Ingrampartnumber { get; set; }

        /// <summary>
        /// Vendor or Manufacturer Part Number
        /// </summary>
        /// <value>Vendor or Manufacturer Part Number</value>
        [DataMember(Name = "manufacturerpartnumber", EmitDefaultValue = false)]
        public string Manufacturerpartnumber { get; set; }

        /// <summary>
        /// UPC
        /// </summary>
        /// <value>UPC</value>
        [DataMember(Name = "upccode", EmitDefaultValue = false)]
        public string Upccode { get; set; }

        /// <summary>
        /// Product description
        /// </summary>
        /// <value>Product description</value>
        [DataMember(Name = "productdescription", EmitDefaultValue = false)]
        public string Productdescription { get; set; }

        /// <summary>
        /// Gets or Sets Currency
        /// </summary>
        [DataMember(Name = "currency", EmitDefaultValue = false)]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or Sets Haswarranty
        /// </summary>
        [DataMember(Name = "haswarranty", EmitDefaultValue = false)]
        public string Haswarranty { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProductSearchResponseServiceresponseProductsearchresponseInnerPartnumbersInner {\n");
            sb.Append("  Ingrampartnumber: ").Append(Ingrampartnumber).Append("\n");
            sb.Append("  Manufacturerpartnumber: ").Append(Manufacturerpartnumber).Append("\n");
            sb.Append("  Upccode: ").Append(Upccode).Append("\n");
            sb.Append("  Productdescription: ").Append(Productdescription).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  Haswarranty: ").Append(Haswarranty).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
