/*
 * Reseller API Documentation - United States
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-csharp.Model
{
    /// <summary>
    /// OrderDetailRequestServicerequestOrderdetailrequest
    /// </summary>
    [DataContract(Name = "orderDetailRequest_servicerequest_orderdetailrequest")]
    public partial class OrderDetailRequestServicerequestOrderdetailrequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailRequestServicerequestOrderdetailrequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderDetailRequestServicerequestOrderdetailrequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDetailRequestServicerequestOrderdetailrequest" /> class.
        /// </summary>
        /// <param name="ordernumber">Ingram Micro Order Number (required).</param>
        /// <param name="customerponumber">customerponumber.</param>
        /// <param name="orderdate">orderdate.</param>
        /// <param name="systemid">systemid.</param>
        public OrderDetailRequestServicerequestOrderdetailrequest(string ordernumber = default(string), string customerponumber = default(string), string orderdate = default(string), string systemid = default(string))
        {
            // to ensure "ordernumber" is required (not null)
            if (ordernumber == null)
            {
                throw new ArgumentNullException("ordernumber is a required property for OrderDetailRequestServicerequestOrderdetailrequest and cannot be null");
            }
            this.Ordernumber = ordernumber;
            this.Customerponumber = customerponumber;
            this.Orderdate = orderdate;
            this.Systemid = systemid;
        }

        /// <summary>
        /// Ingram Micro Order Number
        /// </summary>
        /// <value>Ingram Micro Order Number</value>
        [DataMember(Name = "ordernumber", IsRequired = true, EmitDefaultValue = true)]
        public string Ordernumber { get; set; }

        /// <summary>
        /// Gets or Sets Customerponumber
        /// </summary>
        [DataMember(Name = "customerponumber", EmitDefaultValue = false)]
        public string Customerponumber { get; set; }

        /// <summary>
        /// Gets or Sets Orderdate
        /// </summary>
        [DataMember(Name = "orderdate", EmitDefaultValue = false)]
        public string Orderdate { get; set; }

        /// <summary>
        /// Gets or Sets Systemid
        /// </summary>
        [DataMember(Name = "systemid", EmitDefaultValue = false)]
        public string Systemid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDetailRequestServicerequestOrderdetailrequest {\n");
            sb.Append("  Ordernumber: ").Append(Ordernumber).Append("\n");
            sb.Append("  Customerponumber: ").Append(Customerponumber).Append("\n");
            sb.Append("  Orderdate: ").Append(Orderdate).Append("\n");
            sb.Append("  Systemid: ").Append(Systemid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
