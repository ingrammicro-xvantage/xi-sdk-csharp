/*
 * Reseller API Documentation - United States
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-csharp.Model
{
    /// <summary>
    /// FreightResponseFreightEstimateResponseDistributionInner
    /// </summary>
    [DataContract(Name = "freightResponse_freightEstimateResponse_distribution_inner")]
    public partial class FreightResponseFreightEstimateResponseDistributionInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FreightResponseFreightEstimateResponseDistributionInner" /> class.
        /// </summary>
        /// <param name="shipFromBranchNumber">The ID of the warehouse the line item will ship from..</param>
        /// <param name="carrierCode">The code for the shipping carrier for the line item..</param>
        /// <param name="shipVia">The name of the shipping carrier..</param>
        /// <param name="freightRate">Estimated freight charge..</param>
        /// <param name="totalWeight">Total weight..</param>
        /// <param name="transitDays">Number of transit days..</param>
        /// <param name="carrierList">carrierList.</param>
        public FreightResponseFreightEstimateResponseDistributionInner(string shipFromBranchNumber = default(string), string carrierCode = default(string), string shipVia = default(string), decimal freightRate = default(decimal), decimal totalWeight = default(decimal), int transitDays = default(int), List<FreightResponseFreightEstimateResponseDistributionInnerCarrierListInner> carrierList = default(List<FreightResponseFreightEstimateResponseDistributionInnerCarrierListInner>))
        {
            this.ShipFromBranchNumber = shipFromBranchNumber;
            this.CarrierCode = carrierCode;
            this.ShipVia = shipVia;
            this.FreightRate = freightRate;
            this.TotalWeight = totalWeight;
            this.TransitDays = transitDays;
            this.CarrierList = carrierList;
        }

        /// <summary>
        /// The ID of the warehouse the line item will ship from.
        /// </summary>
        /// <value>The ID of the warehouse the line item will ship from.</value>
        [DataMember(Name = "shipFromBranchNumber", EmitDefaultValue = false)]
        public string ShipFromBranchNumber { get; set; }

        /// <summary>
        /// The code for the shipping carrier for the line item.
        /// </summary>
        /// <value>The code for the shipping carrier for the line item.</value>
        [DataMember(Name = "carrierCode", EmitDefaultValue = false)]
        public string CarrierCode { get; set; }

        /// <summary>
        /// The name of the shipping carrier.
        /// </summary>
        /// <value>The name of the shipping carrier.</value>
        [DataMember(Name = "shipVia", EmitDefaultValue = false)]
        public string ShipVia { get; set; }

        /// <summary>
        /// Estimated freight charge.
        /// </summary>
        /// <value>Estimated freight charge.</value>
        [DataMember(Name = "freightRate", EmitDefaultValue = false)]
        public decimal FreightRate { get; set; }

        /// <summary>
        /// Total weight.
        /// </summary>
        /// <value>Total weight.</value>
        [DataMember(Name = "totalWeight", EmitDefaultValue = false)]
        public decimal TotalWeight { get; set; }

        /// <summary>
        /// Number of transit days.
        /// </summary>
        /// <value>Number of transit days.</value>
        [DataMember(Name = "transitDays", EmitDefaultValue = false)]
        public int TransitDays { get; set; }

        /// <summary>
        /// Gets or Sets CarrierList
        /// </summary>
        [DataMember(Name = "carrierList", EmitDefaultValue = false)]
        public List<FreightResponseFreightEstimateResponseDistributionInnerCarrierListInner> CarrierList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FreightResponseFreightEstimateResponseDistributionInner {\n");
            sb.Append("  ShipFromBranchNumber: ").Append(ShipFromBranchNumber).Append("\n");
            sb.Append("  CarrierCode: ").Append(CarrierCode).Append("\n");
            sb.Append("  ShipVia: ").Append(ShipVia).Append("\n");
            sb.Append("  FreightRate: ").Append(FreightRate).Append("\n");
            sb.Append("  TotalWeight: ").Append(TotalWeight).Append("\n");
            sb.Append("  TransitDays: ").Append(TransitDays).Append("\n");
            sb.Append("  CarrierList: ").Append(CarrierList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
