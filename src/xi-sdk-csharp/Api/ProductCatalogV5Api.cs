/*
 * Reseller API Documentation - United States
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using xi-sdk-csharp.Client;
using xi-sdk-csharp.Client.Auth;
using xi-sdk-csharp.Model;

namespace xi-sdk-csharp.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductCatalogV5ApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Search Product Catalog
        /// </summary>
        /// <remarks>
        /// Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductSearchResponse</returns>
        ProductSearchResponse GetV5CatalogProductsearch(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0);

        /// <summary>
        /// Search Product Catalog
        /// </summary>
        /// <remarks>
        /// Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductSearchResponse</returns>
        ApiResponse<ProductSearchResponse> GetV5CatalogProductsearchWithHttpInfo(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0);
        /// <summary>
        /// Find availability of upto 50 SKUs
        /// </summary>
        /// <remarks>
        /// Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PriceAndAvailabilityResponse</returns>
        PriceAndAvailabilityResponse MultiSKUPriceAndStock(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0);

        /// <summary>
        /// Find availability of upto 50 SKUs
        /// </summary>
        /// <remarks>
        /// Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PriceAndAvailabilityResponse</returns>
        ApiResponse<PriceAndAvailabilityResponse> MultiSKUPriceAndStockWithHttpInfo(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductCatalogV5ApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Search Product Catalog
        /// </summary>
        /// <remarks>
        /// Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductSearchResponse</returns>
        System.Threading.Tasks.Task<ProductSearchResponse> GetV5CatalogProductsearchAsync(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Search Product Catalog
        /// </summary>
        /// <remarks>
        /// Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductSearchResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ProductSearchResponse>> GetV5CatalogProductsearchWithHttpInfoAsync(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Find availability of upto 50 SKUs
        /// </summary>
        /// <remarks>
        /// Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PriceAndAvailabilityResponse</returns>
        System.Threading.Tasks.Task<PriceAndAvailabilityResponse> MultiSKUPriceAndStockAsync(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Find availability of upto 50 SKUs
        /// </summary>
        /// <remarks>
        /// Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </remarks>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PriceAndAvailabilityResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PriceAndAvailabilityResponse>> MultiSKUPriceAndStockWithHttpInfoAsync(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProductCatalogV5Api : IProductCatalogV5ApiSync, IProductCatalogV5ApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProductCatalogV5Api : IProductCatalogV5Api
    {
        private xi-sdk-csharp.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCatalogV5Api"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductCatalogV5Api() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCatalogV5Api"/> class.
        /// </summary>
        /// <returns></returns>
        public ProductCatalogV5Api(string basePath)
        {
            this.Configuration = xi-sdk-csharp.Client.Configuration.MergeConfigurations(
                xi-sdk-csharp.Client.GlobalConfiguration.Instance,
                new xi-sdk-csharp.Client.Configuration { BasePath = basePath }
            );
            this.Client = new xi-sdk-csharp.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new xi-sdk-csharp.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = xi-sdk-csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCatalogV5Api"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProductCatalogV5Api(xi-sdk-csharp.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = xi-sdk-csharp.Client.Configuration.MergeConfigurations(
                xi-sdk-csharp.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new xi-sdk-csharp.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new xi-sdk-csharp.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = xi-sdk-csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProductCatalogV5Api"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProductCatalogV5Api(xi-sdk-csharp.Client.ISynchronousClient client, xi-sdk-csharp.Client.IAsynchronousClient asyncClient, xi-sdk-csharp.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = xi-sdk-csharp.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public xi-sdk-csharp.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public xi-sdk-csharp.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public xi-sdk-csharp.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public xi-sdk-csharp.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Search Product Catalog Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ProductSearchResponse</returns>
        public ProductSearchResponse GetV5CatalogProductsearch(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0)
        {
            xi-sdk-csharp.Client.ApiResponse<ProductSearchResponse> localVarResponse = GetV5CatalogProductsearchWithHttpInfo(customerNumber, isoCountryCode, partNumber);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search Product Catalog Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ProductSearchResponse</returns>
        public xi-sdk-csharp.Client.ApiResponse<ProductSearchResponse> GetV5CatalogProductsearchWithHttpInfo(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0)
        {
            // verify the required parameter 'customerNumber' is set
            if (customerNumber == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'customerNumber' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }

            // verify the required parameter 'isoCountryCode' is set
            if (isoCountryCode == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'isoCountryCode' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }

            // verify the required parameter 'partNumber' is set
            if (partNumber == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'partNumber' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }

            xi-sdk-csharp.Client.RequestOptions localVarRequestOptions = new xi-sdk-csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi-sdk-csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = xi-sdk-csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "customerNumber", customerNumber));
            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "isoCountryCode", isoCountryCode));
            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "partNumber", partNumber));

            localVarRequestOptions.Operation = "ProductCatalogV5Api.GetV5CatalogProductsearch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (application) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ProductSearchResponse>("/resellers/v5/Catalog", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetV5CatalogProductsearch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Search Product Catalog Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ProductSearchResponse</returns>
        public async System.Threading.Tasks.Task<ProductSearchResponse> GetV5CatalogProductsearchAsync(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi-sdk-csharp.Client.ApiResponse<ProductSearchResponse> localVarResponse = await GetV5CatalogProductsearchWithHttpInfoAsync(customerNumber, isoCountryCode, partNumber, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Search Product Catalog Search the Ingram Micro product catalog using customerNumber, isoCountryCode and partNumber.&lt;ul&gt;&lt;li&gt;customerNumber and isoCountryCode fields are required.&lt;/li&gt;&lt;li&gt;The PartNumber field accepts the following:&lt;ul&gt;&lt;li&gt;Ingram part number&lt;/li&gt;&lt;li&gt;Vendor part number&lt;/li&gt;&lt;li&gt;Customer part number&lt;/li&gt;&lt;li&gt;UPC (Universal Product Code)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="customerNumber">Your unique Ingram Micro customer number</param>
        /// <param name="isoCountryCode">2 chars country code</param>
        /// <param name="partNumber">Part Number can be ingram part number or vendor part number or customer part number or UPC</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ProductSearchResponse)</returns>
        public async System.Threading.Tasks.Task<xi-sdk-csharp.Client.ApiResponse<ProductSearchResponse>> GetV5CatalogProductsearchWithHttpInfoAsync(string customerNumber, string isoCountryCode, string partNumber, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'customerNumber' is set
            if (customerNumber == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'customerNumber' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }

            // verify the required parameter 'isoCountryCode' is set
            if (isoCountryCode == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'isoCountryCode' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }

            // verify the required parameter 'partNumber' is set
            if (partNumber == null)
            {
                throw new xi-sdk-csharp.Client.ApiException(400, "Missing required parameter 'partNumber' when calling ProductCatalogV5Api->GetV5CatalogProductsearch");
            }


            xi-sdk-csharp.Client.RequestOptions localVarRequestOptions = new xi-sdk-csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi-sdk-csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = xi-sdk-csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "customerNumber", customerNumber));
            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "isoCountryCode", isoCountryCode));
            localVarRequestOptions.QueryParameters.Add(xi-sdk-csharp.Client.ClientUtils.ParameterToMultiMap("", "partNumber", partNumber));

            localVarRequestOptions.Operation = "ProductCatalogV5Api.GetV5CatalogProductsearch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (application) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ProductSearchResponse>("/resellers/v5/Catalog", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetV5CatalogProductsearch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Find availability of upto 50 SKUs Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PriceAndAvailabilityResponse</returns>
        public PriceAndAvailabilityResponse MultiSKUPriceAndStock(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0)
        {
            xi-sdk-csharp.Client.ApiResponse<PriceAndAvailabilityResponse> localVarResponse = MultiSKUPriceAndStockWithHttpInfo(priceAndAvailabilityRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Find availability of upto 50 SKUs Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PriceAndAvailabilityResponse</returns>
        public xi-sdk-csharp.Client.ApiResponse<PriceAndAvailabilityResponse> MultiSKUPriceAndStockWithHttpInfo(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0)
        {
            xi-sdk-csharp.Client.RequestOptions localVarRequestOptions = new xi-sdk-csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi-sdk-csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = xi-sdk-csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = priceAndAvailabilityRequest;

            localVarRequestOptions.Operation = "ProductCatalogV5Api.MultiSKUPriceAndStock";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (application) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PriceAndAvailabilityResponse>("/resellers/v5/Catalog/priceandavailability", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("MultiSKUPriceAndStock", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Find availability of upto 50 SKUs Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PriceAndAvailabilityResponse</returns>
        public async System.Threading.Tasks.Task<PriceAndAvailabilityResponse> MultiSKUPriceAndStockAsync(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            xi-sdk-csharp.Client.ApiResponse<PriceAndAvailabilityResponse> localVarResponse = await MultiSKUPriceAndStockWithHttpInfoAsync(priceAndAvailabilityRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Find availability of upto 50 SKUs Search the product catalog for the price and availability for up to 50 SKUs at one time. This endpoint helps to confirm the details just prior to placing a real-time call.&lt;ul&gt;&lt;li&gt;You may request visibility for reserve stock if you participate in reserved inventory, in addition to the stock that is open to all the partners. Please see the details in the endpoint model below.&lt;/li&gt;&lt;li&gt;Follow these guidelines when using this endpoint:&lt;ul&gt;&lt;li&gt;This endpoint is not for refreshing the full catalog with availability and pricing information. Ingram Micro applies rate limits on this endpoint. Continuous cyclical calls will error out. Customers that perform this activity may lose access to the endpoint.&lt;/li&gt;&lt;li&gt;For the full catalog refresh, Ingram Micro can provide a Price and Inventory file in flat file format, made available through FTP download. Please contact your Ingram Micro sales rep for details.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
        /// </summary>
        /// <exception cref="xi-sdk-csharp.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="priceAndAvailabilityRequest"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PriceAndAvailabilityResponse)</returns>
        public async System.Threading.Tasks.Task<xi-sdk-csharp.Client.ApiResponse<PriceAndAvailabilityResponse>> MultiSKUPriceAndStockWithHttpInfoAsync(PriceAndAvailabilityRequest? priceAndAvailabilityRequest = default(PriceAndAvailabilityRequest?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            xi-sdk-csharp.Client.RequestOptions localVarRequestOptions = new xi-sdk-csharp.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = xi-sdk-csharp.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = xi-sdk-csharp.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = priceAndAvailabilityRequest;

            localVarRequestOptions.Operation = "ProductCatalogV5Api.MultiSKUPriceAndStock";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (application) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PriceAndAvailabilityResponse>("/resellers/v5/Catalog/priceandavailability", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("MultiSKUPriceAndStock", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
