/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-resellers-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-resellers-csharp.Model
{
    /// <summary>
    /// OrderDeleteRequestServicerequestOrderDeleteRequestDetails
    /// </summary>
    [DataContract(Name = "orderDeleteRequest_servicerequest_OrderDeleteRequestDetails")]
    public partial class OrderDeleteRequestServicerequestOrderDeleteRequestDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDeleteRequestServicerequestOrderDeleteRequestDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected OrderDeleteRequestServicerequestOrderDeleteRequestDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderDeleteRequestServicerequestOrderDeleteRequestDetails" /> class.
        /// </summary>
        /// <param name="entryDate">Date order entered (required).</param>
        /// <param name="orderBranch">Ingram Micro&#39;s first 2 numbers of the order number (required).</param>
        /// <param name="orderNumber">Ingram Micro&#39;s middle 6 numbers of the order# (required).</param>
        /// <param name="rejectionCode">rejectionCode.</param>
        /// <param name="distributionNumber">Ingram Micro&#39;s suffix number of the order#.</param>
        /// <param name="shipmentNumber">Ingram Micro&#39;s last number of the order#.</param>
        /// <param name="operatorID">Ingram ID(not required).</param>
        public OrderDeleteRequestServicerequestOrderDeleteRequestDetails(string entryDate = default(string), string orderBranch = default(string), string orderNumber = default(string), string rejectionCode = default(string), string distributionNumber = default(string), string shipmentNumber = default(string), string operatorID = default(string))
        {
            // to ensure "entryDate" is required (not null)
            if (entryDate == null)
            {
                throw new ArgumentNullException("entryDate is a required property for OrderDeleteRequestServicerequestOrderDeleteRequestDetails and cannot be null");
            }
            this.EntryDate = entryDate;
            // to ensure "orderBranch" is required (not null)
            if (orderBranch == null)
            {
                throw new ArgumentNullException("orderBranch is a required property for OrderDeleteRequestServicerequestOrderDeleteRequestDetails and cannot be null");
            }
            this.OrderBranch = orderBranch;
            // to ensure "orderNumber" is required (not null)
            if (orderNumber == null)
            {
                throw new ArgumentNullException("orderNumber is a required property for OrderDeleteRequestServicerequestOrderDeleteRequestDetails and cannot be null");
            }
            this.OrderNumber = orderNumber;
            this.RejectionCode = rejectionCode;
            this.DistributionNumber = distributionNumber;
            this.ShipmentNumber = shipmentNumber;
            this.OperatorID = operatorID;
        }

        /// <summary>
        /// Date order entered
        /// </summary>
        /// <value>Date order entered</value>
        /// <example>8/25/2018</example>
        [DataMember(Name = "entryDate", IsRequired = true, EmitDefaultValue = true)]
        public string EntryDate { get; set; }

        /// <summary>
        /// Ingram Micro&#39;s first 2 numbers of the order number
        /// </summary>
        /// <value>Ingram Micro&#39;s first 2 numbers of the order number</value>
        [DataMember(Name = "orderBranch", IsRequired = true, EmitDefaultValue = true)]
        public string OrderBranch { get; set; }

        /// <summary>
        /// Ingram Micro&#39;s middle 6 numbers of the order#
        /// </summary>
        /// <value>Ingram Micro&#39;s middle 6 numbers of the order#</value>
        [DataMember(Name = "orderNumber", IsRequired = true, EmitDefaultValue = true)]
        public string OrderNumber { get; set; }

        /// <summary>
        /// Gets or Sets RejectionCode
        /// </summary>
        [DataMember(Name = "rejectionCode", EmitDefaultValue = false)]
        public string RejectionCode { get; set; }

        /// <summary>
        /// Ingram Micro&#39;s suffix number of the order#
        /// </summary>
        /// <value>Ingram Micro&#39;s suffix number of the order#</value>
        [DataMember(Name = "distributionNumber", EmitDefaultValue = false)]
        public string DistributionNumber { get; set; }

        /// <summary>
        /// Ingram Micro&#39;s last number of the order#
        /// </summary>
        /// <value>Ingram Micro&#39;s last number of the order#</value>
        [DataMember(Name = "shipmentNumber", EmitDefaultValue = false)]
        public string ShipmentNumber { get; set; }

        /// <summary>
        /// Ingram ID(not required)
        /// </summary>
        /// <value>Ingram ID(not required)</value>
        [DataMember(Name = "operatorID", EmitDefaultValue = false)]
        public string OperatorID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderDeleteRequestServicerequestOrderDeleteRequestDetails {\n");
            sb.Append("  EntryDate: ").Append(EntryDate).Append("\n");
            sb.Append("  OrderBranch: ").Append(OrderBranch).Append("\n");
            sb.Append("  OrderNumber: ").Append(OrderNumber).Append("\n");
            sb.Append("  RejectionCode: ").Append(RejectionCode).Append("\n");
            sb.Append("  DistributionNumber: ").Append(DistributionNumber).Append("\n");
            sb.Append("  ShipmentNumber: ").Append(ShipmentNumber).Append("\n");
            sb.Append("  OperatorID: ").Append(OperatorID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
