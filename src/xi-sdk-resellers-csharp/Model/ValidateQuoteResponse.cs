/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = xi-sdk-resellers-csharp.Client.OpenAPIDateConverter;

namespace xi-sdk-resellers-csharp.Model
{
    /// <summary>
    /// ValidateQuoteResponse
    /// </summary>
    [DataContract(Name = "ValidateQuoteResponse")]
    public partial class ValidateQuoteResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidateQuoteResponse" /> class.
        /// </summary>
        /// <param name="quoteNumber">A unique identifier generated by Ingram Micro&#39;s CRM specific to each quote..</param>
        /// <param name="vendorName">The name of the vendor..</param>
        /// <param name="vmfAdditionalAttributes">The object containing the list of fields required at a header level by the vendor..</param>
        /// <param name="lines">The object containing the lines from the quote..</param>
        public ValidateQuoteResponse(string quoteNumber = default(string), string vendorName = default(string), List<ValidateQuoteResponseVmfAdditionalAttributesInner> vmfAdditionalAttributes = default(List<ValidateQuoteResponseVmfAdditionalAttributesInner>), List<ValidateQuoteResponseLinesInner> lines = default(List<ValidateQuoteResponseLinesInner>))
        {
            this.QuoteNumber = quoteNumber;
            this.VendorName = vendorName;
            this.VmfAdditionalAttributes = vmfAdditionalAttributes;
            this.Lines = lines;
        }

        /// <summary>
        /// A unique identifier generated by Ingram Micro&#39;s CRM specific to each quote.
        /// </summary>
        /// <value>A unique identifier generated by Ingram Micro&#39;s CRM specific to each quote.</value>
        /// <example>QUO-14551943-D2Y9L9</example>
        [DataMember(Name = "quoteNumber", EmitDefaultValue = false)]
        public string QuoteNumber { get; set; }

        /// <summary>
        /// The name of the vendor.
        /// </summary>
        /// <value>The name of the vendor.</value>
        /// <example>Cisco</example>
        [DataMember(Name = "vendorName", EmitDefaultValue = false)]
        public string VendorName { get; set; }

        /// <summary>
        /// The object containing the list of fields required at a header level by the vendor.
        /// </summary>
        /// <value>The object containing the list of fields required at a header level by the vendor.</value>
        [DataMember(Name = "vmfAdditionalAttributes", EmitDefaultValue = false)]
        public List<ValidateQuoteResponseVmfAdditionalAttributesInner> VmfAdditionalAttributes { get; set; }

        /// <summary>
        /// The object containing the lines from the quote.
        /// </summary>
        /// <value>The object containing the lines from the quote.</value>
        [DataMember(Name = "lines", EmitDefaultValue = false)]
        public List<ValidateQuoteResponseLinesInner> Lines { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidateQuoteResponse {\n");
            sb.Append("  QuoteNumber: ").Append(QuoteNumber).Append("\n");
            sb.Append("  VendorName: ").Append(VendorName).Append("\n");
            sb.Append("  VmfAdditionalAttributes: ").Append(VmfAdditionalAttributes).Append("\n");
            sb.Append("  Lines: ").Append(Lines).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
