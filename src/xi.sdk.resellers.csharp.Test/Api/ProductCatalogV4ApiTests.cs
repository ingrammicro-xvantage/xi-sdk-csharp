/*
 * Reseller API Documentation
 *
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using xi.sdk.resellers.csharp.Client;
using xi.sdk.resellers.csharp.Api;
// uncomment below to import models
//using xi.sdk.resellers.csharp.Model;

namespace xi.sdk.resellers.csharp.Test.Api
{
    /// <summary>
    ///  Class for testing ProductCatalogV4Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProductCatalogV4ApiTests : IDisposable
    {
        private ProductCatalogV4Api instance;

        public ProductCatalogV4ApiTests()
        {
            instance = new ProductCatalogV4Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductCatalogV4Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProductCatalogV4Api
            //Assert.IsType<ProductCatalogV4Api>(instance);
        }

        /// <summary>
        /// Test PostV4Multiskupriceandstock
        /// </summary>
        [Fact]
        public void PostV4MultiskupriceandstockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MultiSKUPriceAndStockRequest? multiSKUPriceAndStockRequest = null;
            //var response = instance.PostV4Multiskupriceandstock(multiSKUPriceAndStockRequest);
            //Assert.IsType<MultiSKUPriceAndStockResponse>(response);
        }

        /// <summary>
        /// Test PostV4Productsearch
        /// </summary>
        [Fact]
        public void PostV4ProductsearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductSearchRequest? productSearchRequest = null;
            //var response = instance.PostV4Productsearch(productSearchRequest);
            //Assert.IsType<ProductSearchResponse>(response);
        }
    }
}
