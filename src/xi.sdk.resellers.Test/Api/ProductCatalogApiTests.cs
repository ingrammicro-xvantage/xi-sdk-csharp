/*
 * XI Sdk Resellers
 *
 * For Ingram Micro Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using xi.sdk.resellers.Client;
using xi.sdk.resellers.Api;
// uncomment below to import models
//using xi.sdk.resellers.Model;

namespace xi.sdk.resellers.Test.Api
{
    /// <summary>
    ///  Class for testing ProductCatalogApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProductCatalogApiTests : IDisposable
    {
        private ProductCatalogApi instance;

        public ProductCatalogApiTests()
        {
            instance = new ProductCatalogApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductCatalogApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProductCatalogApi
            //Assert.IsType<ProductCatalogApi>(instance);
        }

        /// <summary>
        /// Test GetResellerV6Productdetail
        /// </summary>
        [Fact]
        public void GetResellerV6ProductdetailTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ingramPartNumber = null;
            //string iMCustomerNumber = null;
            //string iMCountryCode = null;
            //string iMCorrelationID = null;
            //string? iMSenderID = null;
            //var response = instance.GetResellerV6Productdetail(ingramPartNumber, iMCustomerNumber, iMCountryCode, iMCorrelationID, iMSenderID);
            //Assert.IsType<ProductDetailResponse>(response);
        }

        /// <summary>
        /// Test GetResellerV6Productsearch
        /// </summary>
        [Fact]
        public void GetResellerV6ProductsearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string iMCustomerNumber = null;
            //string iMCorrelationID = null;
            //string iMCountryCode = null;
            //int? pageNumber = null;
            //int? pageSize = null;
            //string? iMSenderID = null;
            //string? type = null;
            //string? hasDiscounts = null;
            //List<string>? vendor = null;
            //List<string>? vendorPartNumber = null;
            //string? acceptLanguage = null;
            //string? vendorNumber = null;
            //List<string>? keyword = null;
            //string? category = null;
            //string? skipAuthorisation = null;
            //var response = instance.GetResellerV6Productsearch(iMCustomerNumber, iMCorrelationID, iMCountryCode, pageNumber, pageSize, iMSenderID, type, hasDiscounts, vendor, vendorPartNumber, acceptLanguage, vendorNumber, keyword, category, skipAuthorisation);
            //Assert.IsType<ProductSearchResponse>(response);
        }

        /// <summary>
        /// Test PostPriceandavailability
        /// </summary>
        [Fact]
        public void PostPriceandavailabilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool includeAvailability = null;
            //bool includePricing = null;
            //string iMCustomerNumber = null;
            //string iMCountryCode = null;
            //string iMCorrelationID = null;
            //PriceAndAvailabilityRequest priceAndAvailabilityRequest = null;
            //bool? includeProductAttributes = null;
            //string? iMSenderID = null;
            //var response = instance.PostPriceandavailability(includeAvailability, includePricing, iMCustomerNumber, iMCountryCode, iMCorrelationID, priceAndAvailabilityRequest, includeProductAttributes, iMSenderID);
            //Assert.IsType<List<PriceAndAvailabilityResponseInner>>(response);
        }
    }
}
