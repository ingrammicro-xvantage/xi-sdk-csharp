/*
 * XI Sdk Resellers
 *
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using xi.sdk.resellers.Client;
using xi.sdk.resellers.Api;
// uncomment below to import models
//using xi.sdk.resellers.Model;

namespace xi.sdk.resellers.Test.Api
{
    /// <summary>
    ///  Class for testing OrderStatusApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrderStatusApiTests : IDisposable
    {
        private OrderStatusApi instance;

        public OrderStatusApiTests()
        {
            instance = new OrderStatusApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrderStatusApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrderStatusApi
            //Assert.IsType<OrderStatusApi>(instance);
        }

        /// <summary>
        /// Test ResellersV1WebhooksOrderstatuseventPost
        /// </summary>
        [Fact]
        public void ResellersV1WebhooksOrderstatuseventPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string targeturl = null;
            //string xHubSignature = null;
            //OrderStatusAsyncNotificationRequest orderStatusAsyncNotificationRequest = null;
            //instance.ResellersV1WebhooksOrderstatuseventPost(targeturl, xHubSignature, orderStatusAsyncNotificationRequest);
        }
    }
}
